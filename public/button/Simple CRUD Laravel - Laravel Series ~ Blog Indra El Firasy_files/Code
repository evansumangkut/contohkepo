// API callback
relpostimgcuplik({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147"},"updated":{"$t":"2015-04-05T01:41:08.717+07:00"},"category":[{"term":"Code"},{"term":"Tips"},{"term":"Laravel"},{"term":"Laravel Series"},{"term":"Blogspot"},{"term":"Daily"},{"term":"Laravel 5"},{"term":"Template"},{"term":"Bisnis"},{"term":"Javascript"},{"term":"Premium Template"},{"term":"Tempat Makan Enak"},{"term":"Tools"},{"term":"Trik"},{"term":"Android"},{"term":"Application Letter"},{"term":"Chrome"},{"term":"Ember.js"},{"term":"Facebook PHP SDK"},{"term":"Fun"},{"term":"Gratisan"},{"term":"Hikmah"},{"term":"Internet Marketing"},{"term":"Keamanan Blog"},{"term":"MVC"},{"term":"Movie 2014"},{"term":"Passion"},{"term":"Puisi"},{"term":"Review Movie"},{"term":"Syntax Highlighter"},{"term":"Tips Hidup"},{"term":"Video Tutorial"},{"term":"Xampp"}],"title":{"type":"text","$t":"Blog Indra El Firasy"},"subtitle":{"type":"html","$t":"Berbagi informasi seputar dunia pemrograman, bisnis, internet, dan tempat makan enak"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/-\/Code?alt=json-in-script\u0026max-results=50"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/search\/label\/Code"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"9"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"50"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-5678234157514932979"},"published":{"$t":"2015-02-11T10:00:00.000+07:00"},"updated":{"$t":"2015-02-11T10:00:01.114+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel 5"}],"title":{"type":"text","$t":"Terbaru Dari Laravel 5 - Part 1: Struktur Direktori Laravel 5"},"content":{"type":"html","$t":"\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-ZxVLDbAjwFg\/VNnGd4D4DXI\/AAAAAAAAFo4\/fGJHtip1HGo\/s1600\/struktur%2Bdirektori%2Blaravel%2B5.jpg\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg alt=\"struktur direktori laravel 5\" border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-ZxVLDbAjwFg\/VNnGd4D4DXI\/AAAAAAAAFo4\/fGJHtip1HGo\/s1600\/struktur%2Bdirektori%2Blaravel%2B5.jpg\" height=\"318\" title=\"struktur direktri terbaru dari laravel 5\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EStruktur Direktori Laravel 5\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003ETerbaru dari Laravel 5 - Part 1: Struktur Direktori Laravel 5\u003C\/b\u003E hadir dengan struktur berbeda dari versi laravel sebelumnya. Pada Laravel 5 ini terjadi perombakan struktur direktori dari starter app nya. Pada laravel 5 tersebut, folder app hanya berisi \u003Ci\u003Elogic application\u003C\/i\u003E saja. Lalu bagaimana dengan folder lainnya seperti configurasi dan sebagainya?\u003C\/div\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EFolder config, database, storage, dan tests dipindahkan pada root folder. Sementara folder views dan lang dipindahkan ke sebuah folder baru bernama resource di root. Dengan dilakukannya perubahan direktori pada laravel 5, maka struktur Laravel 5 terlihat seperti berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cul\u003E\u003Cli\u003Eapp\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003EConsole\u003C\/li\u003E\u003Cli\u003EHttp\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003EControllers\u003C\/li\u003E\u003Cli\u003EFilters\u003C\/li\u003E\u003Cli\u003ERequests\u003C\/li\u003E\u003C\/ul\u003E\u003Cli\u003EProviders\u003C\/li\u003E\u003C\/ul\u003E\u003Cli\u003Ebootstrap\u003C\/li\u003E\u003Cli\u003Econfig\u003C\/li\u003E\u003Cli\u003Edatabase\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003Emigrations\u003C\/li\u003E\u003Cli\u003Eseeds\u003C\/li\u003E\u003C\/ul\u003E\u003Cli\u003Epublic\u003C\/li\u003E\u003Cli\u003Eresources\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003Elang\u003C\/li\u003E\u003Cli\u003Eviews\u003C\/li\u003E\u003C\/ul\u003E\u003Cli\u003Estorage\u003C\/li\u003E\u003Cul\u003E\u003Cli\u003Ecache\u003C\/li\u003E\u003Cli\u003Elogs\u003C\/li\u003E\u003Cli\u003Emeta\u003C\/li\u003E\u003Cli\u003Esession\u003C\/li\u003E\u003Cli\u003Eviews\u003C\/li\u003E\u003Cli\u003Ework\u003C\/li\u003E\u003C\/ul\u003E\u003C\/ul\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EKita dapat melihat bahwa di bawah folder \u003Ci\u003Eapp\u003C\/i\u003E terdapat sub folder baru: \u003Ci\u003EConsole\u003C\/i\u003E, \u003Ci\u003EHttp\u003C\/i\u003E, dan \u003Ci\u003EProvider\u003C\/i\u003E. \u003Ci\u003EController \u003C\/i\u003Edan segala hal yang berhubungan dengan \u003Ci\u003Erequest \u003C\/i\u003Eterhadap aplikasi disatukan pada folder \u003Ci\u003Ehttp\u003C\/i\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELaravel 5 mengelompokkan semua hal tentang logic bagaimana aplikasi diakses dalam satu folder. Jadi misalnya kita tidak menggunakan \u003Ci\u003Econtroller \u003C\/i\u003Eketika menjalankan perintah \u003Ci\u003Ephp artisan\u003C\/i\u003E\u0026nbsp;pada console. Sehingga \u003Ci\u003Econtroller \u003C\/i\u003Editempatkan sebagai sub folder Http. Demikian pula dengan \u003Ci\u003Efilter\u003C\/i\u003E, kita tidak perlu memanggil perintah filter pada route saat menjalankan \u003Ci\u003Ecommand \u003C\/i\u003Epada console.\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EFolder baru lagi adalah folder request. Request menjadi sesuatu yang baru pada Laravel 5 yang akan menyelamatkan banyak waktu dari programmer. Lebih lengkapnya tentang hal tersebut akan dibahas pada part selanjutnya. Laravel 5 juga akan membuat lebih banyak kegunaan dari \u003Ci\u003Eprovider\u003C\/i\u003E. Sehingga dibuatkan satu folder tersendiri dan digabung dalam folder app bersama logic aplikasi lainnya.\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/5678234157514932979\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/02\/terbaru-dari-laravel-5-part-1-struktur-direktori.html#comment-form","title":"2 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5678234157514932979"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5678234157514932979"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/02\/terbaru-dari-laravel-5-part-1-struktur-direktori.html","title":"Terbaru Dari Laravel 5 - Part 1: Struktur Direktori Laravel 5"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/4.bp.blogspot.com\/-ZxVLDbAjwFg\/VNnGd4D4DXI\/AAAAAAAAFo4\/fGJHtip1HGo\/s72-c\/struktur%2Bdirektori%2Blaravel%2B5.jpg","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-7769455342631647607"},"published":{"$t":"2015-01-08T12:00:00.000+07:00"},"updated":{"$t":"2015-02-13T14:43:02.214+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Tips"}],"title":{"type":"text","$t":"Mengenal Package pada Laravel dan Kegunaannya"},"content":{"type":"html","$t":"\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EApa itu Package pada Laravel?\u003C\/b\u003E Package pada Laravel sama hal nya dengan Library dan Helper pada CodeIgniter, yaitu merupakan source code yang bisa diberdayagunakan kembali pada suatu project. Kita tidak perlu tahu bagaimana dan apa yang ada di dalam package, kita cukup mengetahui apa fungsi yang bisa digunakan untuk kebutuhan kita.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-45CGY7nKEg0\/VKwXJoZSi2I\/AAAAAAAAE3M\/bzuGYy8pzRQ\/s1600\/mengenal%2Bpackage%2Blaravel.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"mengenal package laravel\" border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-45CGY7nKEg0\/VKwXJoZSi2I\/AAAAAAAAE3M\/bzuGYy8pzRQ\/s1600\/mengenal%2Bpackage%2Blaravel.jpg\" height=\"302\" title=\"mengenal package laravel\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EMisalnya ketika Anda ingin membuat aplikasi Laravel dimana orang bisa daftar dan masuk melalui berbagai social media, Anda tidak perlu membuat satu-satu fungsi untuk melakukan hal itu. Kita dapat menggunakan Package yang sudah ada dan banyak sekali di Internet.\u0026nbsp;\u003Ca href=\"http:\/\/packalyst.com\/\" rel=\"nofollow\" target=\"_blank\"\u003EPackalyst\u003C\/a\u003E salah satu sumber terbaik untuk Anda mencari berbagai package yang Anda butuhkan. Kita tinggal install pada Laravel kita, dan siap untuk digunakan.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EManfaat lainnya dari menggunakan package\u003C\/b\u003E adalah kita jadi bisa menghemat waktu untuk membuat \u003Ci\u003Efunction\u003C\/i\u003E yang sebenarnya ada package yang tersedia. Pengerjaan jadi mudah dan cepat dilakukan. Kita dapat mengakses fungsi yang ada pada class disediakan package tersebut dari controller maupun route. Berikut beberapa package yang bisa Anda gunakan \u0026nbsp;untuk membantu dalam mengembangkan website dengan Laravel.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/packalyst.com\/packages\/package\/artdarek\/oauth-4-laravel\" rel=\"nofollow\" target=\"_blank\"\u003EOauth Wrapper for Laravel\u003C\/a\u003E\u003Cbr \/\u003EPackage ini berfungsi untuk kebutuhan login dan register menggunakan social media. Jika Anda ingin web Anda bisa login menggunakan Facebook, Twitter, Google+, Linkedin, dan lainnya, package ini sangat \u003Ci\u003Erekomended\u003C\/i\u003E.\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/packalyst.com\/packages\/package\/cviebrock\/eloquent-sluggable\" rel=\"nofollow\" target=\"_blank\"\u003EElequent Sluggable\u003C\/a\u003E\u003Cbr \/\u003EPackage ini untuk kebutuhan meningkatkan SEO aplikasi web. Setiap artikel akan memiliki slug berupa lowercase dari judul artikel. Sehingga akan memudahkan Anda untuk membuat url yang Google Friendly.\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/packalyst.com\/packages\/package\/thujohn\/rss\" rel=\"nofollow\" target=\"_blank\"\u003ERSS Generator\u003C\/a\u003E\u003Cbr \/\u003EBerguna untuk membuat RSS feed secara otomatis.\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/packalyst.com\/packages\/package\/intervention\/imagecache\" rel=\"nofollow\" target=\"_blank\"\u003EIntervention Image\u003C\/a\u003E\u003Cbr \/\u003EUntuk kompresor gambar. Sehingga Anda bisa membuat thumbnail image yang ukuran kecil. Ini dapat meningkatkan page speed halaman website.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPackage lainnya bisa Anda temukan di Packalyst.com. Setiap package yang ada di sana disajikan lengkap dengan informasi cara pemasangan, dokumentasi, contoh, dan berapa banyak orang yang sudah menggunakannya sebagai popularity sebuah package.\u003Cbr \/\u003E\u003Cbr \/\u003ETentu saja, ada berbagai jenis Package. Beberapa package ada yang berdiri sendiri atau \u003Ci\u003Estand-alone\u003C\/i\u003E, yang berarti mereka bekerja dengan \u003Ci\u003Eframework\u003C\/i\u003E apapun, bukan hanya Laravel. Carbon dan Behat contohnya. Kedua package tersebut merupakan package yang \u003Ci\u003Estand-alone\u003C\/i\u003E. Setiap paket ini dapat digunakan dengan framework lain atau Laravel dengan hanya memasukkan mereka ke dalam file \u003Ci\u003Ecomposer.json\u003C\/i\u003E. Nanti kita akan bahas bagaimana cara memasang package.\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDi sisi lain, paket-paket lain secara khusus dirancang untuk digunakan dengan Laravel. Dalam versi sebelumnya dari Laravel, jenis package ini disebut \"bundel\". Package tersebut mungkin memiliki rute, controller, view, konfigurasi, dan migrasi khusus ditujukan untuk meningkatkan aplikasi Laravel.\u003Cbr \/\u003E\u003Cbr \/\u003ESetelah mengetahui kegunaan dari Package pada Laravel, saatnya belajar cara install sebuah package Laravel di aplikasi kita. Contohnya kita akan menginstal package Oauth Wrapper for Laravel yang ada di Packalyst.com. Pertama buka file \u003Ci\u003Ecomposer.json\u003C\/i\u003E yang ada di root aplikasi Laravel kita. Lalu tambahkan pada bagian \"require\" nama package yang ingin di install seperti berikut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre title=\"Composer.js\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003E\/\/...\u003Cbr \/\u003E\"require\": {\u003Cbr \/\u003E  \"artdarek\/oauth-4-laravel\": \"dev-master\"\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ESetelah itu, jalankan composer dari untuk melakukan update.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre title=\"Console\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003E$ composer update\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELalu daftarkan service provider dari package dengan cara menambahkannya pada 'providers' dan 'aliasis' yang ada di file app\/config\/app.php seperti berikut.\u003C\/div\u003E\u003Cbr \/\u003E\u003Cpre title=\"App\/config\/app.php\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003E'providers' =\u0026gt; array(\u003Cbr \/\u003E    \/\/ ...\u003Cbr \/\u003E\u003Cbr \/\u003E    'Artdarek\\OAuth\\OAuthServiceProvider'\u003Cbr \/\u003E)\u003Cbr \/\u003E.\u003Cbr \/\u003E.\u003Cbr \/\u003E.\u003Cbr \/\u003E'aliases' =\u0026gt; array(\u003Cbr \/\u003E    \/\/ ...\u003Cbr \/\u003E\u003Cbr \/\u003E    'OAuth' =\u0026gt; 'Artdarek\\OAuth\\Facade\\OAuth',\u003Cbr \/\u003E)\u003Cbr \/\u003E\u003C\/code\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAda beberapa package yang butuh dilakukan custom configuration secara manual. Sehingga kita butuh untuk membuat file konfigurasi untuk package tersebut seperti hal nya package Oauth Wrapper ini. Jalankan perintah berikut di command prompt Anda.\u003C\/div\u003E\u003Cbr \/\u003E\u003Cpre title=\"Console\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003Ephp artisan config:publish artdarek\/oauth-4-laravel\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESekarang package Anda sudah bisa digunakan. Secara umum jika Anda ingin menggunakan package, langkah untuk pemasangannya seperti di atas. Biasanya para provider dapat dipastikan memberikan informasi cara pemasangan dan penggunakaannya.\u003Cbr \/\u003E\u003Cbr \/\u003EDemikianlah sedikit\u0026nbsp;\u003Cb\u003Einformasi tentang package pada Laravel dan kegunaannya\u003C\/b\u003E beserta cara pemasangannya. Selamat mencoba.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/7769455342631647607\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/01\/mengenal-package-pada-laravel-dan.html#comment-form","title":"2 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/7769455342631647607"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/7769455342631647607"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/01\/mengenal-package-pada-laravel-dan.html","title":"Mengenal Package pada Laravel dan Kegunaannya"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-45CGY7nKEg0\/VKwXJoZSi2I\/AAAAAAAAE3M\/bzuGYy8pzRQ\/s72-c\/mengenal%2Bpackage%2Blaravel.jpg","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-6084824847037974177"},"published":{"$t":"2015-01-06T17:19:00.001+07:00"},"updated":{"$t":"2015-02-13T14:36:20.139+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Blogspot"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Syntax Highlighter"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Tips"}],"title":{"type":"text","$t":"Cara Menampilkan Kodingan di Blogspot dengan SyntaxHighlighter"},"content":{"type":"html","$t":"\u003Cdiv style=\"text-align: justify;\"\u003EBuat Anda yang ingin berbagi informasi atau tips terkait pemrograman, sangat bijak sekali jika kita bisa menampilkan seperti apa kodingannya. Sehingga dapat membuat orang langsung menangkap maksud dan solusi yang ingin kita sampaikan. Bagi serang programmer seperti saya Syntax Highlighter ini sangat membantu sekali ketika ingin berbagi pengalaman dalam dunia pemrograman. Sebelumnya saya menggunakan screen capture berupa image untuk menampilkan source code. Dulu kebutuhannya biar sekalian bisa dibikinin ebook. Tapi tidak effektif ketika ingin ditampilkan di blog.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-UWeSIwn-Flo\/VKuzwS5DRsI\/AAAAAAAAE3A\/UPT08km7Kr8\/s1600\/cara%2Bmenampilkan%2Bkodingan%2Bdi%2Bblogspot.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"cara menampilkan kodingan di blogspot\" border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-UWeSIwn-Flo\/VKuzwS5DRsI\/AAAAAAAAE3A\/UPT08km7Kr8\/s1600\/cara%2Bmenampilkan%2Bkodingan%2Bdi%2Bblogspot.png\" height=\"330\" title=\"cara menampilkan kodingan di blogspot\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESetelah tahu caranya gimana buat nampilin source code di Blogspot, jadi terasa lebih baik. Gak perlu upload-upload gambar yang banyak. Jadi lebih gak lama loading time page-nya. Oke, berikut nih \u003Cb\u003Ecara menampilkan kodingan di Blogspot dengan SyntaxHighlighter\u003C\/b\u003E bagi yang belum tahu seperti saya untuk menampilkan source code program kita di Blogspot.\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPertama, silahkan login ke blogspot dan pilih menu \u003Ci\u003ETemplate \u003C\/i\u003Elalu klik \u003Ci\u003EEdit Html\u003C\/i\u003E. Setelah itu cari \u003Cspan style=\"font-family: Verdana, sans-serif;\"\u003E\u0026lt;head\u0026gt;\u003C\/span\u003E section pada template yang ada. Tambahkan code berikut.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre title=\"HTML\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003E\u0026lt;script src=\u0026quot;http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/scripts\/shCore.js\u0026quot; type=\u0026quot;text\/javascript\u0026quot;\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\u0026quot;http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/scripts\/shBrushRuby.js\u0026quot; type=\u0026quot;text\/javascript\u0026quot;\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\u0026quot;http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/scripts\/shLegacy.js\u0026quot; type=\u0026quot;text\/javascript\u0026quot;\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;link href=\u0026quot;http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/styles\/shCore.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text\/css\u0026quot;\u0026gt;\u0026lt;\/link\u0026gt;\u003Cbr \/\u003E\u0026lt;link href=\u0026quot;http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/styles\/shThemeDefault.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text\/css\u0026quot;\u0026gt;\u0026lt;\/link\u0026gt;\u003Cbr \/\u003E\u0026lt;script language=\u0026quot;javascript\u0026quot;\u0026gt;\u003Cbr \/\u003Ewindow.onload = function () {\u003Cbr \/\u003E    dp.SyntaxHighlighter.ClipboardSwf = 'http:\/\/alexgorbatchev.com\/pub\/sh\/2.1.364\/scripts\/clipboard.swf';\u003Cbr \/\u003E    dp.SyntaxHighlighter.HighlightAll('code');\u003Cbr \/\u003E    dp.SyntaxHighlighter.BloggerMode();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESebenarnya ada banyak pilihan yang bisa kita gunakan untuk menampilkan source code tergantung jenis code nya apakah php, javascript, atau ruby, dan sebagainya. Kita harus me-load file javascript no 2 di atas sesuai bahasa yang ingin kita gunakan. Jika ada banyak bahasa, tinggal load semuanya aja. Berikut daftar javascript yang harus dipasang berdasarkan bahasa pemrograman.\u003C\/div\u003E\u003Cul\u003E\u003Cli\u003EshBrushCpp.js\u003C\/li\u003E\u003Cli\u003EshBrushCSharp.js\u003C\/li\u003E\u003Cli\u003EshBrushCss.js\u003C\/li\u003E\u003Cli\u003EshBrushDelphi.js\u003C\/li\u003E\u003Cli\u003EshBrushJava.js\u003C\/li\u003E\u003Cli\u003EshBrushJScript.js\u003C\/li\u003E\u003Cli\u003EshBrushPhp.js\u003C\/li\u003E\u003Cli\u003EshBrushPython.js\u003C\/li\u003E\u003Cli\u003EshBrushRuby.js\u003C\/li\u003E\u003Cli\u003EshBrushSql.js\u003C\/li\u003E\u003Cli\u003EshBrushVb.js\u003C\/li\u003E\u003Cli\u003EshBrushXml.js\u003C\/li\u003E\u003Cli\u003EshCore.js\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESelanjutnya setelah selesai kita tambahkan javascript tersebut, saatnya menggunakan Syntax Highlighter. Untuk menggunakannya sederhanya saja. Seperti berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre title=\"HTML\" data-codetype =\"HTMLku\"\u003E\u003Ccode class=\"language-markup\"\u003E\u003Cbr \/\u003E\u0026lt;pre class=\u0026quot;brush: php\u0026quot; name=\u0026quot;code\u0026quot;\u0026gt;# Tulis kodingan php di sini\u0026lt;\/pre\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EIngat, class brush harus sesuai dengan code yang ingin kita tampilkan. Jika source code yang ingin kita tampilkan berupa bahasa php, maka beri nama class brush: php. Jika berupa javascript beri nama berupa class brush: js atau jscript atau javascript.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemikianlah \u003Cb\u003Epenggunakan Syntax Highlighter untuk menampilkan kodingan di blogspot\u003C\/b\u003E. Semoga ada yang bisa terbantu dengan saya sharing di sini.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EHappy code!\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E:)\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/6084824847037974177\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/01\/cara-menampilkan-kodingan-di-blogspot.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/6084824847037974177"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/6084824847037974177"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/01\/cara-menampilkan-kodingan-di-blogspot.html","title":"Cara Menampilkan Kodingan di Blogspot dengan SyntaxHighlighter"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-UWeSIwn-Flo\/VKuzwS5DRsI\/AAAAAAAAE3A\/UPT08km7Kr8\/s72-c\/cara%2Bmenampilkan%2Bkodingan%2Bdi%2Bblogspot.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-3800712498374717899"},"published":{"$t":"2014-10-12T14:08:00.000+07:00"},"updated":{"$t":"2015-01-06T16:40:44.970+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Facebook PHP SDK"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Integrasi Facebook Login pada Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s1600\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s1600\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg\" height=\"417\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada sesi kali ini saya akan berbagi tutorial tentang mengintegrasikan Facebook dengan laravel. Lebih tepatnya \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html\"\u003Eintegrasi Facebook login pada aplikasi Laravel\u003C\/a\u003E. Pada sesi kali ini kita akan memasang Facebook PHP SDK pada projek Laravel. Kemudian membuat aplikasi Facebook untuk digunakan sebagai media social-login aplikasi Laravel. Ketika seorang user login, kita akan mengambil data profile user tersebut dari Facebook dan menyimpannya pada database.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAda beberapa step yang akan kita lalui secara garis besar pada sesi kali ini.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EKonfigurasi Database\u003C\/li\u003E\u003Cli\u003EMembuat Facebook App\u003C\/li\u003E\u003Cli\u003EMemasang Facebook PHP SDK pada Laravel\u003C\/li\u003E\u003Cli\u003EMenggunakan Library Facebook pada Laravel\u003C\/li\u003E\u003C\/ol\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cb\u003EKonfigurasi Database\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada sesi \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html\"\u003Esebelumnya\u003C\/a\u003E kita sudah membuat tabel users yang menyimpan data seperti email, name, dan password. Tambahkan satu atribut lagi yaitu photo. Kita juga akan butuh satu tabel lagi yang menyimpan data profile user dari Facebook seperti username, user facebook id, dan access token lebih kurang seperti gambar berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-SIebfEIaud8\/VDoQ1lyn0mI\/AAAAAAAACD4\/_OyDft2H0DU\/s1600\/laravel-tabel-profile.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-SIebfEIaud8\/VDoQ1lyn0mI\/AAAAAAAACD4\/_OyDft2H0DU\/s1600\/laravel-tabel-profile.jpg\" height=\"155\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EJika Anda belum memiliki kedua tabel tersebut, Anda dapat membuatnya secara manual menggunakan fitur create table pada phpmyadmin xampp Anda. Anda juga bisa menggunakan fitur migrate pada Laravel. Langkahnya adalah sebagai berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EBuka cmd pada windows Anda, lalu CD ke folder Laravel.\u003C\/li\u003E\u003Cli\u003EJalankan perintah berikut:\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Ephp artisan migrate:make create_users_table\u003Cbr \/\u003Ephp artisan migrate:make create_profiles_table\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003ELaravel akan membuatkan dua file migration untuk Anda. Sekarang buka file migration \"create_users_table\" pada folder \"\u003Ci\u003Eapp\/database\/migrations\u003C\/i\u003E\".\u003C\/li\u003E\u003Cli\u003EHapus semua konten dan masukkan kode migrasi berikut lalu Save.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Euse IlluminateDatabaseMigrationsMigration;\u003Cbr \/\u003Eclass CreateUsersTable extends Migration {\u003Cbr \/\u003E    public function up()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::create('users', function($table)\u003Cbr \/\u003E        {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;string('email')-\u0026gt;unique();\u003Cbr \/\u003E            $table-\u0026gt;string('photo');\u003Cbr \/\u003E            $table-\u0026gt;string('name');\u003Cbr \/\u003E            $table-\u0026gt;string('password');\u003Cbr \/\u003E            $table-\u0026gt;timestamps();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E    public function down()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::drop('users');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EBuka file \"create_profiles_table\" pada folder yang sama, lalu hapus semua konten dan masukkan kode migrasi berikut lalu Save.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Euse IlluminateDatabaseMigrationsMigration;\u003Cbr \/\u003E\u003Cbr \/\u003Eclass CreateProfilesTable extends Migration {\u003Cbr \/\u003E    public function up()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::create('profiles', function($table)\u003Cbr \/\u003E        {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;integer('user_id')-\u0026gt;unsigned();\u003Cbr \/\u003E            $table-\u0026gt;string('username');\u003Cbr \/\u003E            $table-\u0026gt;biginteger('uid')-\u0026gt;unsigned();\u003Cbr \/\u003E            $table-\u0026gt;string('access_token');\u003Cbr \/\u003E            $table-\u0026gt;string('access_token_secret');\u003Cbr \/\u003E            $table-\u0026gt;timestamps();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E    public function down()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::drop('profiles');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EJalankan perintah \"php artisan migrate\" pada cmd. Laravel akan membuatkan dua tabel user pada database. Pastikan Anda sudah membuat database dan melakukan pengaturan koneksi database pada file app\/config\/database.php.\u003C\/li\u003E\u003Cli\u003EBuat model untuk tabel profiles. Buat file baru dengan nama Profile.php dan simpan pada folder \"app\/model\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Eclass Profile extends Eloquent {\u003Cbr \/\u003E    public function user()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        return $this-\u0026gt;belongsTo('User');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EPada file app\/model\/User.php juga tambahkan pengaturan relationship berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Epublic function profiles()\u003Cbr \/\u003E{\u003Cbr \/\u003E   return $this-\u0026gt;hasMany('Profile');\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cb\u003EMemasang Facebook PHP SDK\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESaya tidak akan membahas lebih dalam mengenai cara membuat Facebook App. Anda dapat mempelajarinya pada dokumentasi yang disediakan Facebook. Simpelnya silahkan buka\u0026nbsp;https:\/\/developers.facebook.com\/ dan klik menu Apps. Di sana ada pilihan \"Add new app\" untuk Anda membuat Facebook App.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESetelah Anda selesai membuat App tersebut, pastikan Anda mendapatkan App ID dan App Secret Key. Asumsikan Anda sudah memiliki keduanya, sekarang buat file facebook.php yang berisikan App ID dan Secret Key App Facebook Anda, dan simpan pada folder \"app\/config\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003E\/\/ app\/config\/facebook.php\u003Cbr \/\u003E\/\/ Facebook app Config \u003Cbr \/\u003Ereturn array(\u003Cbr \/\u003E    'appId' =\u0026gt; 'my-app-id',\u003Cbr \/\u003E    'secret' =\u0026gt; 'my-app-secret'\u003Cbr \/\u003E);\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003EBerikut langkah untuk memasang Facebook PHP SDK:\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EBuka kembali folder Laravel anda pada cmd.\u003C\/li\u003E\u003Cli\u003EJalankan commend berikut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Ecomposer require facebook\/php-sdk\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EAnda akan ditanya oleh prompt tentang version yang akan dipasang. Ketik \u003Ci\u003Edev-master\u003C\/i\u003E\u0026nbsp;lalu tekan\u0026nbsp;\u003Ci\u003EEnter\u003C\/i\u003E.\u003C\/li\u003E\u003Cli\u003EBiarkan commend prompt menyelesaikan tugasnya.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EFacebook SDK akan didownload dan entry pada package SDK akan terdaftar secara otomatis pada file composer.json. File SDK Facebook tersebut akan dapat Anda temukan pada folder vendor. Sekarang kita sudah dapat menggunakan Facebook SDK tersebut pada aplikasi Anda.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EMenggunakan Library Facebook pada Laravel\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESesi ini merupakan bagian terpenting untuk menerapkan Facebook Login dan tentu saja Register. Kita akan bermain pada file Route.php yang ada pada folder \u003Ci\u003Eapp\u003C\/i\u003E.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPertama kita akan membuat route 'login\/fb' yang akan berfungsi untuk mengarahkan user ke halaman authentikasi Facebook dimana user akan memberikan permission untuk mengirim data email, name, photo dan lainnya kembali ke aplikasi.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb', function() {\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $params = array(\u003Cbr \/\u003E        'redirect_uri' =\u0026gt; url(\u003Cb\u003E'\/login\/fb\/callback'\u003C\/b\u003E),\u003Cbr \/\u003E        'scope' =\u0026gt; 'email',\u003Cbr \/\u003E    );\u003Cbr \/\u003E    return Redirect::to($facebook-\u0026gt;getLoginUrl($params));\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EKe dua, kita butuh route \u003Cb\u003E'login\/fb\/callback'\u003C\/b\u003E untuk menerima akses token dari Facebook ketika proses pertama telah dilakukan. Facebook akan secara otomatis mengakses route tersebut karena pada route 'login\/fb' kita sudah mengatur redirect_url supaya menuju route ini.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb\/callback', function() {\u003Cbr \/\u003E    $code = Input::get('code');\u003Cbr \/\u003E    if (strlen($code) == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error communicating with Facebook');\u003Cbr \/\u003E\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $uid = $facebook-\u0026gt;getUser();\u003Cbr \/\u003E\u003Cbr \/\u003E    if ($uid == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error');\u003Cbr \/\u003E\u003Cbr \/\u003E    $me = $facebook-\u0026gt;api('\/me');\u003Cbr \/\u003E\u003Cbr \/\u003E    dd($me);\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESekarang ketika Anda mencoba untuk mengakses login\/fb, seharusnya Anda akan dapat melihat data-data Anda dari Facebook. Jika Anda berhasil pada tahap ini, kita tinggal membuat data tersebut dapat digunakan untuk disimpan pada database sebagai user dan profile.\u003Cbr \/\u003E\u003Cbr \/\u003ESederhananya proses yang akan dilalui adalah sebagai berikut saya kutip dari sumber.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/maxoffsky.com\/word\/wp-content\/uploads\/2013\/08\/Social-Logon.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/maxoffsky.com\/word\/wp-content\/uploads\/2013\/08\/Social-Logon.png\" height=\"480\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ETahap terakhir yang akan kita lakukan adalah menyimpan\/memperbaharui data user sesuai dengan logic di atas.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb\/callback', function() {\u003Cbr \/\u003E    $code = Input::get('code');\u003Cbr \/\u003E    if (strlen($code) == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error communicating with Facebook');\u003Cbr \/\u003E\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $uid = $facebook-\u0026gt;getUser();\u003Cbr \/\u003E\u003Cbr \/\u003E    if ($uid == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error');\u003Cbr \/\u003E\u003Cbr \/\u003E    $me = $facebook-\u0026gt;api('\/me');\u003Cbr \/\u003E\u003Cbr \/\u003E    $profile = Profile::whereUid($uid)-\u0026gt;first();\u003Cbr \/\u003E    if (empty($profile)) {\u003Cbr \/\u003E\u003Cbr \/\u003E        $user = new User;\u003Cbr \/\u003E        $user-\u0026gt;name = $me['first_name'].' '.$me['last_name'];\u003Cbr \/\u003E        $user-\u0026gt;email = $me['email'];\u003Cbr \/\u003E        $user-\u0026gt;photo = 'https:\/\/graph.facebook.com\/'.$me['username'].'\/picture?type=large';\u003Cbr \/\u003E        $user-\u0026gt;save();\u003Cbr \/\u003E\u003Cbr \/\u003E        $profile = new Profile();\u003Cbr \/\u003E        $profile-\u0026gt;uid = $uid;\u003Cbr \/\u003E        $profile-\u0026gt;username = $me['username'];\u003Cbr \/\u003E        $profile = $user-\u0026gt;profiles()-\u0026gt;save($profile);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    $profile-\u0026gt;access_token = $facebook-\u0026gt;getAccessToken();\u003Cbr \/\u003E    $profile-\u0026gt;save();\u003Cbr \/\u003E\u003Cbr \/\u003E    $user = $profile-\u0026gt;user;\u003Cbr \/\u003E\u003Cbr \/\u003E    Auth::login($user);\u003Cbr \/\u003E\u003Cbr \/\u003E    return Redirect::to('\/')-\u0026gt;with('message', 'Logged in with Facebook');\u003Cbr \/\u003E});\u003C\/pre\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ESekarang, cobalah untuk login, dan jika semua berjalan lancar, pada database Anda akan melihat data user Anda berhasil tersimpan. Juga pada halaman browser Anda akan error karena kita belum membuat route '\/'. Sekarang kita buat route '\/' dan 'logout'.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('\/', function()\u003Cbr \/\u003E{\u003Cbr \/\u003E    $data = array();\u003Cbr \/\u003E\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        $data = Auth::user();\u003Cbr \/\u003E    }\u003Cbr \/\u003E    return View::make('user', array('data'=\u0026gt;$data));\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003Cbr \/\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    Auth::logout();\u003Cbr \/\u003E    return Redirect::to('\/');\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003EBiar tampilannya tidak terlalu jelek, kita buat view dengan nama file user.blade.php dan simpan pada folder \"app\/views\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003E@if(Session::has('message'))\u003Cbr \/\u003E    {{ Session::get('message')}}\u003Cbr \/\u003E@endif\u003Cbr \/\u003E\u0026lt;br\/\u0026gt;\u003Cbr \/\u003E@if (!empty($data))\u003Cbr \/\u003E    Hello, {{{ $data['name'] }}} \u003Cbr \/\u003E    \u003Cimg src=\"{{ $data['photo']}}\" \/\u003E\u003Cbr \/\u003E    Your email is {{ $data['email']}}\u003Cbr \/\u003E    \u003Cbr \/\u003E    \u0026lt;a href=\"\/logout\"\u0026gt;Logout\u0026lt;\/a\u0026gt;\u003Cbr \/\u003E@else\u003Cbr \/\u003E    Hi! Would you like to \u0026lt;a href=\"\/login\/fb\"\u0026gt;Login with Facebook\u0026lt;\/a\u0026gt; ?\u003Cbr \/\u003E@endif\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAkhirnya, ketika user ke halaman index dan belum login maka akan muncul perintah untuk memintanya Login with Facebook. Jika user tersebut login, sebuah data user baru akan disimpan pada database jika sebelumnya belum pernah login.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPerlu diingat bahwa uid user yang diterima dari Facebook akan berbeda untuk setiap App Facebook. Ada peluang dimana terjadi duplikat profile data ketika Anda mengganti App Facebook anda sementara data pada tabel profile masih ada.\u0026nbsp;\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemikianlah penjelasan singkat mengenai \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html\"\u003Eintegrasi Facebook PHP SDK pada Laravel\u003C\/a\u003E. Semoga bermanfaat bagi Anda.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESumber:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/maxoffsky.com\/code-blog\/integrating-facebook-login-into-laravel-application\/\"\u003EMaxoffsky\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/laravel.com\/\"\u003ELaravel\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemo:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/demo-fb-login.maxoffsky.com\/\" style=\"background-color: white; border: 0px; color: #00a9f2; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 23.7999992370605px; margin: 0px; padding: 0px; text-align: start; text-decoration: none; vertical-align: baseline;\" target=\"_blank\" title=\"Social sign in demo\"\u003Ehttp:\/\/demo-fb-login.maxoffsky.com\/\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESource on Github:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"https:\/\/github.com\/msurguy\/laravel-facebook-login\" style=\"background-color: white; border: 0px; color: #00a9f2; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 23.7999992370605px; margin: 0px; padding: 0px; text-align: start; text-decoration: none; vertical-align: baseline;\" target=\"_blank\" title=\"Social sign in demo\"\u003Ehttps:\/\/github.com\/msurguy\/laravel-facebook-login\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/3800712498374717899\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/3800712498374717899"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/3800712498374717899"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html","title":"Integrasi Facebook Login pada Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s72-c\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-2628113768804678171"},"published":{"$t":"2014-10-07T00:58:00.003+07:00"},"updated":{"$t":"2014-11-02T02:20:17.787+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"8 Alasan Laravel Lebih Baik daripada CodeIgniter"},"content":{"type":"html","$t":"\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s1600\/laravel-vs-codeigniter.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s1600\/laravel-vs-codeigniter.png\" height=\"376\" width=\"540\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESudah lama rasanya tidak update blog ini. Kali ini saya ingin berbagi tentang kenapa saya beralih meninggalkan CodeIgniter dan menggunakan Laravel. Saya menggunakan CodeIgniter sudah lebih dari dua tahun dan sudah banyak projek yang saya buat dengan menggunakan framework tersebut. Namun, tahun lalu, karena kebutuhan dari client mengharuskan kita untuk menggunakan Laravel, maka terpaksalah saya harus belajar framework tersebut.\u0026nbsp;\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBagi saya yang sudah mengerti CodeIgniter, ketika mencoba menggunakan Laravel butuh waktu satu minggu untuk membuat satu aplikasi yang memberi output berupa REST API. Itu pun saya butuh satu minggu sendiri untuk belajar Laravel. Tapi waktu yang saya investasikan untuk belajar Laravel tersebut sangat layak, apa lagi untuk hal-hal baru pada Laravel, dalam jangka panjang akan menghemat waktu saat proses development berjalan. Terang saja, untuk membuat aplikasi yang sama, hanya butuh waktu dua hari bagi saya ketika sudah mengerti Laravel.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPanduan kali ini tidak dimaksudkan untuk menjadi sebuah tutorial Laravel tetapi hanya berfungsi untuk memberikan suatu pandangan bagaimana beberapa kode Laravel terlihat dan bekerja. Saya telah melihat banyak blog memuji Laravel lebih dari CodeIgniter tapi belum benar-benar melihat ada yang merangkum kenapa itu lebih baik sebenarnya. Berikut 8 alasan - yang menurut saya tepat - kenapa Laravel lebih baik daripada CodeIgniter.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E1. Eloquent ORM\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ECara kita membuat model adalah berdasarkan relationship. Cara tersebut akan mengubah pola pikir kita tentang aplikasi dan gambaran aplikasi. Pada CodeIgniter saya menggunakan model dalam bentuk REST format yang secara dasar memiliki fungsi 'post','get','put','delete'. Pada Laravel, Eloquent ORM sudah menyiapkannya untuk kita. Kita cukup menetapkan relationship saja. Pada dasarnya kita akan membuatnya seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass Post extends Eloquent {\u003Cbr \/\u003E    protected $table = 'posts';\u003Cbr \/\u003E \u003Cbr \/\u003E    public function comments() {\u003Cbr \/\u003E        return $this-\u0026gt;hasMany('Comment');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003ELalu kita akan memanggil model tersebut dengan code berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EPost::find($id)-\u0026gt;comments()-\u0026gt;get();\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ELaravel juga memiliki satu fitur keamanan yang cukup fantastis yang memungkinkan kita untuk membuat field pada tabel terjaga dari berbagai ancaman yang dibuat atau terlupakan oleh developers. Secara default, Eloquent tidak mengizinkan untuk kita melakukan batch 'post' atau 'update' pada model. Kita harus melakukan sesuatu seperti code berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre\u003E$user = new User();\u003Cbr \/\u003E$user-\u0026gt;first_name = Input::get('first_name');\u003Cbr \/\u003E\/\/ dll\u003Cbr \/\u003E$user-\u0026gt;save();\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003ENamun, jika kita ingin model melakukan parsing variabel secara otomatis, bisa dengan cara:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass User extends Eloquent implements UserInterface, RemindableInterface {\u003Cbr \/\u003E \u003Cbr \/\u003E    protected $fillable = array('first_name', 'last_name', 'email');\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EKita cukup menjalankannya dengan code:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EUser::find($id)-\u0026gt;update(Input::all());\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ECanggih bukan? Bersih, aman dan elegan. Hal yang menarik bagi saya terhadap Laravel dari pada CodeIgniter adalah ketika kita membuat sebuah objek baru, ia akan mengembalikan objek tersebut dari pada mengembalikan 'id' saja seperti halnya CodeIgniter.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPenjelasan diatas hanya sedikit gambaran peran yang disediakan oleh Eloquent. Formatnya yang bersih membuat Laravel menyenangkan dan lebih mudah bagi saya untuk digunakan. Anda tentu saja dapat melakukan `joins` dan query yang lebih canggih tetapi semua mengikuti gaya sintaksis sederhana.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E2. Routing\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ERouting pada CodeIgniter mungkin sangat primitif sekali jika dibandingkan dengan Laravel. Pada CI, file Routing berguna ketika kita butuh redirection atau overwrites menggunakan '(:any)' dan '(:num)'. Hal tersebut sebenarnya bermanfaat tetapi butuh waktu yang banyak jika ingin membuat hal tersebut berjalan baik. Laravel memangkas itu semua. Bentuk dasar route pada Laravel adalah seperti code berikut dimana sekedar memanggil controller saja.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::controller('posts', 'PostController');\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita dapat menambahkan fungsi pada Route di Laravel. Bahkan kita bisa menggunakan file Route saja tanpa harus ada Controller untuk menangani sebuah request.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        Auth::logout();\u003Cbr \/\u003E        return Redirect::to(Config::get('app.url.www') . '\/');\u003Cbr \/\u003E    }\u003Cbr \/\u003E    else {\u003Cbr \/\u003E        return Response::view(\u003Cbr \/\u003E            'layouts.master',\u003Cbr \/\u003E            array('view' =\u0026gt; 'errors.404')\u003Cbr \/\u003E        , 404);\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita juga dapat menyaring URLs dengan regular expression dan mengarahkannya ke halaman 404 jika tidak valid.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        Auth::logout();\u003Cbr \/\u003E        return Redirect::to(Config::get('app.url.www') . '\/');\u003Cbr \/\u003E    }\u003Cbr \/\u003E    else {\u003Cbr \/\u003E        return Response::view(\u003Cbr \/\u003E            'layouts.master',\u003Cbr \/\u003E            array('view' =\u0026gt; 'errors.404')\u003Cbr \/\u003E        , 404);\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKelebihan dari Laravel lagi adalah kita dapat membuat filters secara terpisah dan memasangnya pada route lainnya. Ini sangat berguna ketika aplikasi kita butuh sistem authentication seperti admin.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::filter('auth', function() {\u003Cbr \/\u003E    if (Auth::guest()) {\u003Cbr \/\u003E        return Redirect::to('login')\u003Cbr \/\u003E                       -\u0026gt;with('error', 'You must be logged in.');\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E \u003Cbr \/\u003ERoute::when('profile', 'auth');\u003Cbr \/\u003ERoute::when('profile\/*', 'auth');\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003Cbr \/\u003EPenjelasan di atas merupakan gambaran sederhana dari kegunaan route dan filter pada Laravel. Kita dapat melihat keseluruhan aplikasi kita dengan melakukan kontrol terhadap logic dan flow pada filters dan route tersebut.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E3. REST\u003C\/b\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada Codeigniter kita harus menentukan sendiri setiap function CRUD yang ada pada controller jika ingin membuat REST aplikasi. Ada juga yang menyediakan generator untuk mempermudah proses tersebut, akan tetapi function tersebut harus ditentukan route map nya sendiri. Laravel cukup menggunakan satu commend pada file 'route.php' untuk proses tersebut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::resource('posts', 'PostsController');\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ECode tersebut secara otomatis akan memetakan ketujuh function yang ada pada controller:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass PostsController extends \\BaseController {\u003Cbr \/\u003E \u003Cbr \/\u003E    public function index() {\u003Cbr \/\u003E        \/\/ Display a listing of the resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function create() {\u003Cbr \/\u003E        \/\/ Show the form for creating a new resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function store() {\u003Cbr \/\u003E        \/\/ (POST) Store a newly created resource in storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function show($id) {\u003Cbr \/\u003E        \/\/ (GET) Display the specified resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function edit($id) {\u003Cbr \/\u003E        \/\/ Show the form for editing the specified resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function update($id) {\u003Cbr \/\u003E        \/\/ (PUT) Update the specified resource in storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function destroy($id) {\u003Cbr \/\u003E        \/\/ (DELETE) Remove the specified resource from storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita dapat menghapus function 'create' dan 'edit' jika tidak ingin ditampilkan pada interface. Kita juga dapat memasukkan controller tersebut pada folder 'controller\/api' untuk menjaga controller api terpisah. Pengaturan route map-nya akan seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::resource('api\/posts}', 'api\\PostsController');\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003E4. Artisan\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EArsian merupakan script PHP pada Laravel yang dijalankan menggunakan commend line yang dapat digunakan untuk menggali informasi tentang aplikasi dan juga digunakan untuk membuat dan optimalisasi code. Ada banyak commend line yang dapat digunakan pada Laravel. Untuk melihatnya kita dapat menjalankan commend berikut pada cmd.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan list\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ESalah satu commend yang sangat membantu sekali adalah 'migrate' yaitu comment yang dapat anda gunakan untuk melakukan perubahan pada skema database. Kita juga dapat membuat commend kita sendiri. Pelajari lebih lanjut tentang \u003Ca href=\"https:\/\/laravel.com\/docs\/commands\"\u003Edevelop your own artisan command\u003C\/a\u003E. Fitur ini tidak akan anda temukan pada CodeIgniter.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E5. Migrations\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EPada CodeIgniter tidak ada cara yang gampang untuk mengsinkonkan skema database, update skema apalagi melakukan rollback pada skema sebelumnya. Sangat tidak mudah.\u003Cbr \/\u003E\u003Cbr \/\u003EPada Laravel kita dapat menjaga skema database kita sinkron antara pengembang dan server. Skema dapat sinkron hanya dengan menjalankan beberapa command Laravel pada command promt. Berikut command yang akan sering digunakan pada Laravel:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan migrate:make create_posts_table\u003Cbr \/\u003Ephp artisan migrate\u003Cbr \/\u003Ephp artisan migrate:rollback\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ECommand pertama adalah untuk membuat file skema yang dapat kita modifikasi sesuai kebutuhan database. Command ke dua adalah untuk menjalankan skema baru atau perubahan yang ada pada file skema. Sedangakan command ke tiga adalah untuk mengembalikan skema database pada skema sebelumnya. Hal yang menarik adalah ketika command line pertama dijalankan, pada file migration terdapat dua fucntion 'up', dan 'down'. Function tersebut berfungsi untuk meng-update perubahan dan me-rollback perubahan.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass CreatePostsTable extends Migration {\u003Cbr \/\u003E \u003Cbr \/\u003E    public function up() {\u003Cbr \/\u003E        Schema::create('posts', function($table) {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;string('content', 1000);\u003Cbr \/\u003E            $table-\u0026gt;tinyInteger('status')-\u0026gt;unsigned()-\u0026gt;index();\u003Cbr \/\u003E            $table-\u0026gt;timestamp('created_at')-\u0026gt;index();\u003Cbr \/\u003E            $table-\u0026gt;timestamp('updated_at')-\u0026gt;index();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function down() {\u003Cbr \/\u003E        Schema::dropIfExists('posts');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EJuga ada function yang berperan untuk mengisi tabel pada skema dengan data. Cukup mirip dengan CodeIgniter dan sangat mudah dijalankan dengan command:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan db:seed\u003C\/pre\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Cb\u003E6. Composer\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EComposer merupakan solusi untuk menambahkan dan mengelola packages pada aplikasi. Kita cukup menambahkan beberapa baris spesifikasi package, lakukan composer update, dan secara otomatis Laravel akan meng-install-nya. Jika ingin mendapatkan versi terbaru dari package tersebut, cukup lakukan hal yang sama. Tentu saja kita bisa menentukan sendiri kita akan menggunakan package versi berapa.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EJika kita coba buka file composer.json, kita dapat melihat ada area 'require' yang mana bisa kita isi dengan spesifikasi package. Contoh berikut saya menambahkan package user agent yang biasa saya gunakan pada Laravel.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E\"require\": {\u003Cbr \/\u003E    \"laravel\/framework\": \"4.0.*\",\u003Cbr \/\u003E    \"mews\/useragent\": \"dev-master\"\u003Cbr \/\u003E},\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ELangkah berikutnya cukup tambahkan pada file config.php:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E'providers' =\u0026gt; array(\u003Cbr \/\u003E    'Mews\\Useragent\\UseragentServiceProvider',\u003Cbr \/\u003E    \/\/ etc...\u003Cbr \/\u003E),\u003Cbr \/\u003E \u003Cbr \/\u003E'aliases' =\u0026gt; array(\u003Cbr \/\u003E    'Agent' =\u0026gt; 'Mews\\Useragent\\Facades\\Useragent',\u003Cbr \/\u003E    \/\/ etc...\u003Cbr \/\u003E),\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003EKemampuan untuk menemukan package dengan mudah dan up to date, termasuk framework itu sendiri merupakan beban yang tak kan pernah lepas. Adanya composer memberi jalan untuk mempermudah hal tersebut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E7. Authentication\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ESaya menyukai Laravel dengan adanya fungsi-fungsi untuk register\/login user. Ini sangat mempermudah kita dalam memulai pembuatan sebuah aplikasi. Di samping itu, juga terdapat banyak package yang tersedia untuk digunakan sebagai proses register dan login user.\u003Cbr \/\u003E\u003Cbr \/\u003EPada Laravel, kita dapat membuat kode hash untuk user baru.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EHash::make(Input::get('password'));\u003C\/pre\u003E\u003Cbr \/\u003EKita kemudian dapat melakukan proses autentikasi dengan menggunakan 'attempt' method.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::attempt(array('email' =\u0026gt; Input::get('email'), 'password' =\u0026gt; Input::get('password')));\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EJika method tersebut mengembalikan nilai true, dan user terdaftar pada session, secara otomatis user object akan terbentuk dan kita dapat mengaksesnya menggunakan:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::user();\u003Cbr \/\u003EAuth::user()-\u0026gt;id;\u003Cbr \/\u003E\/\/ etc...\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita juga dapat menambahkan atribut lainnya jika dibutuhkan;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::user()-\u0026gt;admin = true;\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EMethod tersebut berpedan dalam proses pembuatan user dan autentikasi sehingga membuat kita dapat fokus pada hal lainnya dari aplikasi. Hal semacam ini tidak akan ditemukan pada CI selain dari pada kita harus mencari sendiri package yang sesuai dan itu pun tanpa auto-update dan dikeloka secara otomatis oleh CI.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E8. Facade\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ELaravel merupakan object oriented framework dimana semua objeknya dapat diakses dengan facade design pattern. Inilah kenapa kode seperti\u0026nbsp;\u003Cspan style=\"background-color: white; color: #444444; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 24px; text-align: start;\"\u003EUser::find(1);\u0026nbsp;\u003C\/span\u003E dapat diakses dan digunakan. Semua hal pada Laravel diperlakukan seperti kode tersebut. Misalkan kita memiliki model Users. Perhatikan kode berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003E\/\/ CodeIgniter\u003Cbr \/\u003E$this-\u0026gt;load-\u0026gt;model('users_model');\u003Cbr \/\u003E$this-\u0026gt;users_model-\u0026gt;get(1);\u003C\/pre\u003E\u003Cpre\u003E\/\/ Laravel\u003Cbr \/\u003EUser::find(1);\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EUntuk mengakses model, dalam hal ini kita ingin mencari User dengan ID 1, Laravel melakukannya dengan sangat elegant. Pada CI kita harus melakukan pengaturan 'autoload' terlebih dahulu.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESumber:\u003C\/b\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/laravel.com\/\"\u003Elaravel.com\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/code.tutsplus.com\/courses\/whats-new-in-laravel-4\"\u003Ewhats new in Laravel 4\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/bit.ly\/1vINYKD\"\u003Ehttp:\/\/websanova.com\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/ayosb1m\"\u003E\u003Cimg src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" border=0 alt=\"BANNER FREE MEMBER\" width=\"450\" height=\"313\"\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/2628113768804678171\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/8-alasan-laravel-lebih-baik-daripada.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2628113768804678171"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2628113768804678171"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/8-alasan-laravel-lebih-baik-daripada.html","title":"8 Alasan Laravel Lebih Baik daripada CodeIgniter"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s72-c\/laravel-vs-codeigniter.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-8860547701001405144"},"published":{"$t":"2014-04-22T11:39:00.000+07:00"},"updated":{"$t":"2014-11-03T02:34:59.631+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Simple CRUD Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s1600\/laravel+-+CRUD.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s1600\/laravel+-+CRUD.png\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESetelah dua minggu berlalu akhirnya bagian ini selesai juga saya tulis. Membuat tutorial ini sebenarnya tidak begitu sulit. Akan tetapi karena ada kesibukan dan hal lainnya pembuatan serial Laravel ini sedikit tertunda. Mohon maaf ya jika ada dari Anda yang lama menunggu.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cb\u003EPendahuluan\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EPada sesi ini kita akan menggunakan Laravel untuk membuat proses \u003Ci\u003Ecreate\u003C\/i\u003E, \u003Ci\u003Eread\u003C\/i\u003E, \u003Ci\u003Eupdate\u003C\/i\u003E, dan \u003Ci\u003Edelete\u003C\/i\u003E (CRUD) sederhana.CRUD merupakan proses standar yang biasa ditemukan pada sebuah sistem aplikasi web. Berikut adalah \u003Ci\u003Euser stories\u003C\/i\u003E dari fitur CRUD yang akan kita buat:\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EPengguna dapat melihat semua data user\u003C\/li\u003E\u003Cli\u003EPengguna dapat menambahkan data user dengan memasukkan data email, nama serta password.\u003C\/li\u003E\u003Cli\u003EPengguna data melihat informasi salah saru user secara mendetil.\u003C\/li\u003E\u003Cli\u003EPengguna dapat memperbaharui data user.\u003C\/li\u003E\u003Cli\u003EPengguna dapat menghapus user tertentu.\u003C\/li\u003E\u003C\/ol\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca name='more'\u003E\u003C\/a\u003ELebih kurang kita akan membuat sebuah aplikasi web sederhana seperti gambar berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-btdniWd0KE8\/U1UsI89oMRI\/AAAAAAAAA5c\/Nm2NL8ECu8E\/s1600\/Series3+-+list.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-btdniWd0KE8\/U1UsI89oMRI\/AAAAAAAAA5c\/Nm2NL8ECu8E\/s1600\/Series3+-+list.jpg\" height=\"201\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EPembuatan Database\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBerdasarkan user stories di atas, langkah awal yang kita lakukan adalah membuat basisdata yang untuk menyimpan data user. Kita akan buat sebuah basisdata dengan nama dblaravel yang memiliki sebuah tabel Users. Informasi yang perlu kita simpan adalah nama, email, nomor hp, alamat dan password, serta informasi kapan dibuat dan kapan diperbaharui sebagai atribut standar yang wajib ada pada model Laravel. Langsung saja ke phpMyAdmin untuk membuat tabel tersebut.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-z6Zsq1fegBQ\/U1UuFcpv86I\/AAAAAAAAA5o\/9qIAdzd8-6U\/s1600\/Series3+-+db.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-z6Zsq1fegBQ\/U1UuFcpv86I\/AAAAAAAAA5o\/9qIAdzd8-6U\/s1600\/Series3+-+db.jpg\" height=\"179\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPastikan Anda sudah mengatur configurasi database laravel pada file app\/config\/database.php bahwa kita menggunakan mysql sebagai database.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E'mysql' =\u0026gt; array(\u003Cbr \/\u003E 'driver'    =\u0026gt; 'mysql',\u003Cbr \/\u003E 'host'      =\u0026gt; 'localhost',\u003Cbr \/\u003E 'database'  =\u0026gt; 'dblaravel',\u003Cbr \/\u003E 'username'  =\u0026gt; 'root',\u003Cbr \/\u003E 'password'  =\u0026gt; '',\u003Cbr \/\u003E 'charset'   =\u0026gt; 'utf8',\u003Cbr \/\u003E 'collation' =\u0026gt; 'utf8_unicode_ci',\u003Cbr \/\u003E 'prefix'    =\u0026gt; '',\u003Cbr \/\u003E),\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003EModel\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EKita akan mulai dengan model. Sederhananya sebuah model pada Laravel merupakan perawakilan dari sebuah tabel yang ada pada basisdata. Sebuah model merupakan sebuah objek yang sudah memiliki berbagai fungsi turunan dari Eloquent laravel. Untuk membuat sebuah model itu sangat mudah, kita cukup menulis beberapa baris kode saja seperti berikut:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-Uo8DMyZlLN0\/U1XgLNsDa9I\/AAAAAAAAA58\/Oj8CR3wpn-I\/s1600\/Series3-model1.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-Uo8DMyZlLN0\/U1XgLNsDa9I\/AAAAAAAAA58\/Oj8CR3wpn-I\/s1600\/Series3-model1.jpg\" height=\"161\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EPada gambar di atas, kita membuat sebuah model untuk tabel proyek. Cukup dengan menuliskan nama tabel yang sesuai dengan model yang ingin kita buat. Lho? Bukannya kita membuat tabel user? Benar. Gambar di atas hanya sebuah demo untuk membuat sebuah model. Pada kasus sesi kali ini, karena tabel yang kita buat adalah tabel user, Laravel sudah menyediakan model User secara default. Kita tinggal mengganti nama tabel yang ada pada model User sesuai dengan tabel yang sudah kita buat.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-3FgsPh4osi4\/U1XgkQvjErI\/AAAAAAAAA6E\/hF0hIccXxag\/s1600\/Series3-model2.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-3FgsPh4osi4\/U1XgkQvjErI\/AAAAAAAAA6E\/hF0hIccXxag\/s1600\/Series3-model2.png\" height=\"420\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ECatatan:\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EJangan pusing dengan kode pada baris 3 dan 4 dari gambar di atas.\u003C\/li\u003E\u003Cli\u003EModel user menggunakan User Interface dan Remindable Interface untuk proses Authentication sehingga pada baris 3 dan 4 harus dideklarasikan seperti hal tersebut.\u003C\/li\u003E\u003Cli\u003EJangan pusing dengan istilah User Interface dan Remindable Interface.\u003C\/li\u003E\u003C\/ol\u003E\u003Cb\u003EController\u003C\/b\u003E\u003Cbr \/\u003EBagian ini merupakan inti nantinya dari apa yang akan kita buat. Kita akan menggunakan commend promt untuk membuat controller. Tinggal buka CMD anda dari sistem windows dan masuk ke folder tempat laravel berada lalu jalankan perintah seperti gambar berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-ldYwlvvWTXk\/U1XhnktVisI\/AAAAAAAAA6Q\/t8C901dMP4o\/s1600\/Series3-controller1.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-ldYwlvvWTXk\/U1XhnktVisI\/AAAAAAAAA6Q\/t8C901dMP4o\/s1600\/Series3-controller1.png\" height=\"84\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESekarang pada folder app\/controller sudah ada file UserController.php sebagai tanda pembuatan controller berhasil. Laravel akan memberikan kerangka fungsi CRUD pada setiap controller yang kita generate. Silahkan buka file tersebut, lebih kurang seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-BKdTGkdVNvE\/U1XiKzxxcfI\/AAAAAAAAA6Y\/rkrulA3Nqt4\/s1600\/Series3-controller2.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-BKdTGkdVNvE\/U1XiKzxxcfI\/AAAAAAAAA6Y\/rkrulA3Nqt4\/s1600\/Series3-controller2.png\" height=\"419\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003ERoute\u003C\/b\u003E\u003Cbr \/\u003EUntuk dapat mengakses fungsi yang ada pada controller, kita harus mendeklarasikan controller tersebut pada routes. Silahkan buka file App\/routes.php lalu tambahkan kode berikut\u003Cbr \/\u003E\u003Cpre\u003E\u003Ci\u003ERoute::resource('users','UserController');\u003C\/i\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003Ci\u003E\u003Cbr \/\u003E\u003C\/i\u003E\u003C\/pre\u003ESekarang coba Anda menambahkan satu baris kode berikut controller user.\u003Cbr \/\u003E\u003Cpre\u003E\u003Ci\u003EPublic function index()\u003Cbr \/\u003E{\u003Cbr \/\u003E   return \"Hello CRUD!\";\u003Cbr \/\u003E}\u003C\/i\u003E\u003Cspan style=\"font-family: Times New Roman;\"\u003E\u003Cspan style=\"white-space: normal;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELalu buka http:\/\/localhost\/laravel\/public\/users dari browser Anda dan Anda akan melihat tulisan “Hello CRUD!”. Jika Anda berhasil sampai pada tahap tersebut, berarti Anda sudah siap untuk membuat sistem CRUD user.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAnda bisa melihat fungsi dan format url yang dapat diakses dari UserController dengan menggunakan perintah php artisan routes pada CMD anda. Informasi yang ada dalam garis bewarna hijau pada gambar di bawah merupakan url yang dapat Anda akses dari browser. Informasi yang ada pada kotak garis bewarna biru merupakan nama Route yang dapat Anda gunakan. Sementara itu, garis putus-putus bewarna orange menandakan controller yang diakses dan garis putus-putus bewarna kuning menandakan fungsi yang digunakan pada controller. Jadi, jika Anda membuka alamat \/users maka Route akan memanggil fungsi index pada controller users. Sederhananya begitu. Nanti kita akan bahas lebih jauh penggunaan Route ini.\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-l5qJpQzeAQQ\/U1XkPBah4-I\/AAAAAAAAA6k\/z2zQJrSdUD0\/s1600\/Series3-route.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-l5qJpQzeAQQ\/U1XkPBah4-I\/AAAAAAAAA6k\/z2zQJrSdUD0\/s1600\/Series3-route.png\" height=\"372\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESejauh ini Anda sudah mengetahui beberapa bagian dari Laravel seperti model, controller, dan route. Tutorial ini tidak selesai sampai di sini. Berhubung tutorialnya sangat panjang, dan saya harus mengerjakan sesuatu lainnya, saya akan sajikan pada Anda dalam bentuk ebook yang dapat Anda download dengan gratis \u003Ca href=\"http:\/\/bit.ly\/1lxnCW2\"\u003Edi sini\u003C\/a\u003E. You know, I have a lot to do this week. So, I think it's better if I just share you my ebook. if you need my source code, you can download it from github.\u003Cbr \/\u003E\u003Cbr \/\u003ESource: \u003Ca href=\"http:\/\/bit.ly\/1ibkBGY\"\u003EGitHub\u003C\/a\u003E\u0026nbsp;|\u0026nbsp;\u003Ca href=\"http:\/\/bit.ly\/1lxnCW2\"\u003EEbook\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ETerimakasih sudah mampir. Semoga tutorialnya bermanfaat.\u003Cbr \/\u003ESalam Laravel!\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/1wnNnzF\"\u003E\u003Cimg alt=\"BANNER FREE MEMBER\" border=\"0\" src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" height=\"313\" width=\"450\" \/\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/8860547701001405144\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8860547701001405144"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8860547701001405144"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html","title":"Simple CRUD Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s72-c\/laravel+-+CRUD.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-5523576709194525275"},"published":{"$t":"2014-04-11T10:58:00.000+07:00"},"updated":{"$t":"2014-11-02T02:30:50.081+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Cara Instalasi Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s1600\/instalasi+laravel.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s1600\/instalasi+laravel.jpg\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Ch2\u003E\u003Cspan style=\"font-family: inherit;\"\u003EHello Laravel!\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EMungkin ada yang bingung dengan cara instal Laravel. Pada bagian ini gw mau berbagi tentang bagaimana \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html\"\u003Ecara instal Laravel\u003C\/a\u003E dan beberapa masalah yang mungkin dihadapi saat instalasi. Berikut gw sajikan cara instal Laravel. Pastikan Anda familiar dengan Xampp karena pada tutorial kali ini gw make Xampp sebagai server localhost.\u003C\/span\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Col\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EDonwload file Laravel. Anda bisa mengunduh file terbaru dari \u003Ca href=\"https:\/\/github.com\/laravel\/laravel\/archive\/master.zip\"\u003EGitHub\u003C\/a\u003E.\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EEkstrak file Laravel dan taruh di htdocs xampp atau pada direktori server yang Anda gunakan.\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka CMD lalu jalankan composer commend seperti berikut:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-8khlgylPVSY\/U0dlOUL7RvI\/AAAAAAAAA4M\/z351L21cvlE\/s1600\/Laravel+-+Instal+-+1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-8khlgylPVSY\/U0dlOUL7RvI\/AAAAAAAAA4M\/z351L21cvlE\/s1600\/Laravel+-+Instal+-+1.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka\u0026nbsp; \u003Ca href=\"http:\/\/localhost\/laravel\/public\"\u003Ehttp:\/\/localhost\/laravel\/public\u003C\/a\u003E di browser anda. jika instalasi berhasil maka akan tampil halaman seperti berikut.\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-_IhjcTJW-yE\/U0dlyjMnaJI\/AAAAAAAAA4U\/ayX9d_cJhQo\/s1600\/Laravel+-+Instal+-+1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-_IhjcTJW-yE\/U0dlyjMnaJI\/AAAAAAAAA4U\/ayX9d_cJhQo\/s1600\/Laravel+-+Instal+-+1.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka file \u003Ci\u003Eroutes.php\u003C\/i\u003E yang ada dalam folder laravel\/apps\/ lalu ketik “Hello world!” seperti berikut.\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-6DmLwbKUQqw\/U0dmDcOIPXI\/AAAAAAAAA4c\/DrLTVfsa_dA\/s1600\/Laravel+-+Instal+-+3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-6DmLwbKUQqw\/U0dmDcOIPXI\/AAAAAAAAA4c\/DrLTVfsa_dA\/s1600\/Laravel+-+Instal+-+3.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EKembali ke browser Anda dan lakukan refresh. Selamat datang di dunia Laravel!\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-TBmWcuKUWCE\/U0dmPbctt7I\/AAAAAAAAA4k\/2NGsAlBW4eA\/s1600\/Laravel+-+Instal+-+4.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-TBmWcuKUWCE\/U0dmPbctt7I\/AAAAAAAAA4k\/2NGsAlBW4eA\/s1600\/Laravel+-+Instal+-+4.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ELakukan \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/cara-menghilangkan-public-pada-laravel.html\"\u003Eseting URL agar \/public tidak muncul\u003C\/a\u003E pada url.\u0026nbsp;\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv class=\"MsoNormal\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EAnda sudah berhasil melakukan instalasi Laravel pada server Anda. Jika proses instalasi yang Anda lakukan tidak sesuai dengan tutorial ini, kemungkinan yang terjadi ada 2 hal:\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003ECommend promt (CMD) Anda tidak mengenal perintah “composer” saat menjalankan “composer install”. Solusinya Anda cukup menginstall \u003Ca href=\"http:\/\/getcomposer.org\/\"\u003Ecomposer\u003C\/a\u003E pada windows Anda.\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EVersi PHP Anda dibawah PHP 5.3. Silahkan cek pada \u003Ci\u003Ephpinfo\u003C\/i\u003E server Anda. Jika Anda menggunakan Xampp sebagai server localhost, anda dapat mengecek versi PHP yang Anda gunakan dengan mengklik menu \u003Ci\u003Ephpinfo()\u003C\/i\u003E pada halaman \u003Ca href=\"http:\/\/localhost\/xampp\"\u003Ehttp:\/\/localhost\/xampp\u003C\/a\u003E.\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003EMungkin itu cara simpel instalasi Laravel. Lemme know if you have another trouble. Setelah ini gw bakal berbagi cara sederhana membuat sistem CRUD dengan laravel. Stay tune!\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003EThanks.\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/ayosb1m\"\u003E\u003Cimg src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" border=0 alt=\"BANNER FREE MEMBER\" width=\"450\" height=\"313\"\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/5523576709194525275\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5523576709194525275"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5523576709194525275"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html","title":"Cara Instalasi Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s72-c\/instalasi+laravel.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-8142311315439059543"},"published":{"$t":"2014-03-27T11:51:00.002+07:00"},"updated":{"$t":"2014-11-02T02:20:36.916+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Ember.js"}],"title":{"type":"text","$t":"Perjalanan Panjang Bersama Ember.js"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-jtMCb9QJuFU\/UyplQkLgVvI\/AAAAAAAAA18\/Dj0KJWkKbDs\/s1600\/emberjs-logo.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-jtMCb9QJuFU\/UyplQkLgVvI\/AAAAAAAAA18\/Dj0KJWkKbDs\/s1600\/emberjs-logo.png\" height=\"353\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EIni \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/03\/perjalanan-panjang-bersama-emberjs.html\"\u003Epengalaman gw\u003C\/a\u003E akhir tahun 2013 ngembangin sebuah aplikasi dengan menggunakan Emberjs. Bagi yang belum tau apa itu Ember, bisa lihat di website resminya www.emberjs.com. Menurut hemat gw, Ember merupakan framework berbasis javascript yang ditujukan bagi front-end developer. Bagi yang pernah menggunakan Node, Backbone, atau Angular, Ember mungkin tidak asing lagi bagi mereka. Secara umum Ember memiliki peran yang sama dengan Backbone atau Angular. Ember bisa membuat website kita smoothy, transisi antar halaman bisa lebih cepat, tanpa loading browser. Ember sangat membantu dan menjadi pilihan yang tepat jika lo pengen bikin aplikasi mobile web.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESemakin laman tren dunia digital semakin mengarah ke dunia mobile. Sekarang orang kalo mau bikin website, mereka juga berfikir untuk membuat versi mobile. Paling tidak website mereka responsive di berbagai device. Beberapa poin itu wajib lo pertimbangkan kalo mau bikin website buat lo sendiri ato buat project yang lo kerjain.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBeranjak dari situ, mulailah gw berkenalan dengan Ember karena ada kebutuhan sebuah project membuat aplikasi mobile web. Gw langsung terjun ke situsnya pengen cari tau apa sih Ember js itu. Setelah baca sana-sini, gw sedikit mengerti apa itu Ember. Dokumentasi yang diberikan oleh Tom Dale (penemu Ember js) cukup membuat gw mengerti. Sekarang saatnya action. Di sana juga ada video tutorial sederhana pengenalan ember. Kalo lo nonton, lo bakal berfikiran sama dengan gw bahwa Ember is magic. Dari situ gw berfikir ini bakalan gampang pasti. Akhirnya gw download filenya, gw pasang di htdocs-nya xampp, terus buka browser. Blank.\u003C\/div\u003E\u003Cblockquote class=\"tr_bq\" style=\"text-align: justify;\"\u003E\u003Cspan style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px; text-align: start;\"\u003E'Uncaught Error: assertion failed: Ember Views require jQuery 1.8 or 1.9 '\u003C\/span\u003E\u003C\/blockquote\u003EOke, gw pasang \u0026nbsp;jQuery 1.7 ternyata. Gw ganti jQuerynya lalu gw kembali ke browser dan masih blank?\u003Cbr \/\u003E\u003Cblockquote class=\"tr_bq\"\u003E\u003Cspan style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;\"\u003E'Uncaught Error: assertion failed: Ember Handlebars requires Handlebars 1.0.0-rc.3\u003C\/span\u003E\u003C\/blockquote\u003EOke, ini menarik sekali (remes pantat). Gw ganti pasang Handlebars nya.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-cBg88PNp8j8\/Uyps8qR98TI\/AAAAAAAAA2M\/htdz4wR7Hho\/s1600\/ember-error-02.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-cBg88PNp8j8\/Uyps8qR98TI\/AAAAAAAAA2M\/htdz4wR7Hho\/s1600\/ember-error-02.jpg\" height=\"424\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESekarang sepertinya sudah tidak bakal ada error lagi. Oke, buka browser. Blank! B L A N K ? ? ? ! WTF!\u003Cbr \/\u003E\u003Cblockquote class=\"tr_bq\"\u003E\u003Cspan style=\"background-color: white; color: #333333; font-family: Consolas, 'Lucida Console', monospace; font-size: 12px; line-height: 12px; white-space: pre-wrap;\"\u003EAssertion failed:\u003C\/span\u003E\u003Cspan style=\"background-color: white; color: red; font-family: Consolas, 'Lucida Console', monospace; font-size: 12px; line-height: 12px; white-space: pre-wrap;\"\u003E \u003C\/span\u003E\u003Cspan style=\"background-color: white; color: #333333; font-family: Consolas, 'Lucida Console', monospace; font-size: 12px; line-height: 12px; white-space: pre-wrap;\"\u003EEmber Handlebars requires Handlebars version 1.0.0. Include a SCRIPT tag in the HTML HEAD linking to the Handlebars file before you link to Ember.\u003C\/span\u003E\u003C\/blockquote\u003E\u003Cdiv style=\"text-align: justify;\"\u003EOke gw pindahin Handlebarsnya sebelum file ember dan akhirnya muncul juga halamannya. Barusan itu merupakan tahap instalasi doank. Untuk satu produk yang gw kembangin waktu itu, butuh waktu 4 bulan buat first release. Sesuai banget dengan tag nya, kalo gak ada ambisi, itu porduk gak bakal release. Kuncinya kalo mau make ember js harus memiliki ambisi yang kuat. Sesuai banget dengan tag nya ember berikut:\u003C\/div\u003E\u003Cblockquote class=\"tr_bq\" style=\"text-align: justify;\"\u003EA FRAMEWORK FOR CREATING AMBITIOUS WEB APPLICATIONS.\u003C\/blockquote\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u0026nbsp;Ada beberapa poin penting yang perlu diperhatikan saat lo menggunakan Ember js, ini \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/03\/perjalanan-panjang-bersama-emberjs.html\"\u003Eberdasarkan pengalaman gw\u003C\/a\u003E pribadi aja.\u003C\/div\u003E\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003EPahami konsep Ember dan cara kerja MVC ember.\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EEmber memiliki konsep bahwa setiap url yang diakses, dikelola oleh Ember Route. Kemudian Ember akan me-load data melalui Model, lalu memuatnya di Controller. Terakhir data akan di render ke View. Setiap interaksi yang terjadi di View akan ditangani oleh Controller. Ini konsep sederhana Ember. Lebih lengkapnya bisa liat di situsnya.\u003C\/div\u003E\u003C\/li\u003E\u003Cli style=\"text-align: justify;\"\u003EEmber menggunakan Handlebar sebagai template nya. Script HTML yang ada pada file index.html akan dibungkus oleh script seperti javascript, tapi dengan type handlebars. Over all semua code yang ada pada file index adalah script-script. Masing-masing script \/ template memiliki ID yang sesuai dengan nama route dan controllernya. Jika url yang diakses saat ini adalah #about maka template yang akan ditampilkan adalah template dengan ID \"about\". Ember miliki template default yang akan diakses setiap saat, yaitu template \"application\". PROBLEM di sini adalah saat lo mau menggunakan sintak jQuery document ready atau $(#apalah).click() dan sebagainya yang berhubungan dengan content atau view, TIDAK akan berfungsi. Meski lo taroh script jQuery di awal \/ di akhir script html. Masalahnya sintak jQuery udah jalan saat view nya belum dijalankan oleh Ember. So, kalo mau menggunakan sintak jQuery buat ngelola content atau view, pasang di file apps dot js.\u003C\/li\u003E\u003Cli style=\"text-align: justify;\"\u003EKonsisten menggunakan versi ember, handlebars, dan ember data. Cerita singkat gw di atas masih menggunakan ember versi 1.1.2. Saat gw belajar itu kebanyakan masih menggunakan versi 1.0 dan sintak nya beda banget. Saat ini sudah versi 1.4, mungkin ada beberapa perubahan lagi sintak nya.\u003C\/li\u003E\u003Cli\u003EDevelop lah menggunakan browser Chrome. Install extension Ember Debugger di Chrome.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EMungkin itu beberapa masukan dari gw kalo lo mau menggunakan Ember. Terus kapan saat nya lo butuh menggunakan Ember?\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Col\u003E\u003Cli\u003EFramework yang bagus untuk membuat aplikasi mobile web. Ember dengan magic nya bisa memberikan interaksi yang bagus, transisi yang cepat, sehingga menambah user experience saat menggunakannya.\u003C\/li\u003E\u003Cli\u003EKetika lo ingin membuat aplikasi web dan lo cuma punya API dari backend nya. API itu pun terserah, bisa dari berbagai jenis, bisa dari PHP, ASP, atau cari CMS sekalipun. Jika lo pengen memisahkan antara client site dengan server site, Ember bisa jadi solusi penghubung antara kedua hal tersebut.\u003C\/li\u003E\u003Cli\u003EBikin slide presentasi di browser. Lo bisa gunain ember widgets dan animation buat menampilkan presentasi ke client atau siapapun dari browser dengan wow banget!\u003C\/li\u003E\u003Cli\u003ELo bisa gunain ember saat lo mau mandi. *just kidding\u003Cbr \/\u003EXD\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EOke, mungkin segitu aja dari gw. Cuma share pengalaman aja. Sesi berikutnya mungkin gw bakal bikinin tutorial tentang Ember js. So, stay tune!\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EThanks.\u003C\/div\u003E\u003Cdiv\u003E:D\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/ayosb1m\"\u003E\u003Cimg src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" border=0 alt=\"BANNER FREE MEMBER\" width=\"450\" height=\"313\"\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/8142311315439059543\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/03\/perjalanan-panjang-bersama-emberjs.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8142311315439059543"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8142311315439059543"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/03\/perjalanan-panjang-bersama-emberjs.html","title":"Perjalanan Panjang Bersama Ember.js"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-jtMCb9QJuFU\/UyplQkLgVvI\/AAAAAAAAA18\/Dj0KJWkKbDs\/s72-c\/emberjs-logo.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-6001834691573941376"},"published":{"$t":"2013-10-29T11:42:00.000+07:00"},"updated":{"$t":"2014-10-08T23:49:57.635+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Tools"}],"title":{"type":"text","$t":"Android Studio - New Tools for Android Apps Development"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-45TplMDWy14\/Um84inWzzCI\/AAAAAAAAAxk\/-s4vxShPf3U\/s1600\/Android+Studio.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-45TplMDWy14\/Um84inWzzCI\/AAAAAAAAAxk\/-s4vxShPf3U\/s320\/Android+Studio.jpg\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EBuat yang hobi bikin aplikasi android, sekarang ada yang baru nih. Namanya Android Studio. Kegunaannya sama kayak Eclipse atau Netbeans yang biasa digunakan oleh programmer kalo ngoding java. Android Studio sudah menyediakan tools buat development dan debugging, serta SDK Android. Biasanya yang make Eclipse harus donload dulu SDK nya.\u003Cbr \/\u003E\u003Cbr \/\u003EBerikut kelebihan Android Studio:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003ESDK Tools udah komplit. Jadi gak perlu download tools lagi seperti kalo menggunakan Eclipse\u003C\/li\u003E\u003Cli\u003ETersedia banyak template dan layout UI yang bisa anda drag and drop\u003C\/li\u003E\u003Cli\u003EAda template-based wizards yang udah tersedia untuk memudahkan membuat komponen dasar dan disain umum Android\u003C\/li\u003E\u003Cli\u003ELebih ringan, buat Notebook yang setara dengan Acer Aspire one 722 (11 inch), bisa menjalankan IDE ini.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003EKalo kekurangannya, Android Studio masih dalam versi yang belum selesai. Mungkin akan terdapat beberapa bug karena ada beberapa fitur yang belum jalan. Jika ingin nyaman ngoding ya tentunya make ADT bundle (Eclipse dengan ADT Plugin). Buat yang ingin nyoba dan mau informasi lebih lanjut bsia kunjungi situsnya \u003Ca href=\"http:\/\/developer.android.com\/sdk\/installing\/studio.html#Updating\"\u003Edi sini\u003C\/a\u003E.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EMoga bermanfaat.\u003C\/div\u003E\u003Cdiv\u003ESalam programmer!\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/6001834691573941376\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2013\/10\/android-studio-new-tools-for-android.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/6001834691573941376"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/6001834691573941376"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2013\/10\/android-studio-new-tools-for-android.html","title":"Android Studio - New Tools for Android Apps Development"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-45TplMDWy14\/Um84inWzzCI\/AAAAAAAAAxk\/-s4vxShPf3U\/s72-c\/Android+Studio.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});
// API callback
relpostimgcuplik({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147"},"updated":{"$t":"2015-04-05T01:41:08.717+07:00"},"category":[{"term":"Code"},{"term":"Tips"},{"term":"Laravel"},{"term":"Laravel Series"},{"term":"Blogspot"},{"term":"Daily"},{"term":"Laravel 5"},{"term":"Template"},{"term":"Bisnis"},{"term":"Javascript"},{"term":"Premium Template"},{"term":"Tempat Makan Enak"},{"term":"Tools"},{"term":"Trik"},{"term":"Android"},{"term":"Application Letter"},{"term":"Chrome"},{"term":"Ember.js"},{"term":"Facebook PHP SDK"},{"term":"Fun"},{"term":"Gratisan"},{"term":"Hikmah"},{"term":"Internet Marketing"},{"term":"Keamanan Blog"},{"term":"MVC"},{"term":"Movie 2014"},{"term":"Passion"},{"term":"Puisi"},{"term":"Review Movie"},{"term":"Syntax Highlighter"},{"term":"Tips Hidup"},{"term":"Video Tutorial"},{"term":"Xampp"}],"title":{"type":"text","$t":"Blog Indra El Firasy"},"subtitle":{"type":"html","$t":"Berbagi informasi seputar dunia pemrograman, bisnis, internet, dan tempat makan enak"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/-\/Laravel+Series?alt=json-in-script\u0026max-results=50"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/search\/label\/Laravel%20Series"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"6"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"50"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-328477672608484128"},"published":{"$t":"2015-02-25T20:00:00.000+07:00"},"updated":{"$t":"2015-02-25T20:00:00.961+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel 5"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Fitur Terbaru Pada Laravel 5 - Part 3"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-WBzTMH4ILt4\/VO1j-P8gV-I\/AAAAAAAAF5w\/hjVSImfcps4\/s1600\/terbaru%2Bdari%2Blaravel%2B5%2Bpart3.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg alt=\"fitur baru laravel 5\" border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-WBzTMH4ILt4\/VO1j-P8gV-I\/AAAAAAAAF5w\/hjVSImfcps4\/s1600\/terbaru%2Bdari%2Blaravel%2B5%2Bpart3.jpg\" height=\"318\" title=\"fitur baru laravel 5\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003ELaravel 5\u003C\/b\u003E hadir dengan fitur terbarunya sejak dirilis akhir tahun 2014 lalu. Sebelumnya kita sudah membahas tentang beberapa \u003Cb\u003Eupdate terbaru dari Laravel 5\u003C\/b\u003E seperti perubahan \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2015\/02\/terbaru-dari-laravel-5-part-1-struktur-direktori.html\" target=\"_blank\"\u003Edirektori\u003C\/a\u003E dan \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2015\/02\/terbaru-dari-laravel-5-part-2-request.html\" target=\"_blank\"\u003Erequest\u003C\/a\u003E. Kali ini kita akan membahas update lainnya pada Laravel 5 khususnya hal yang berkaitan dengan \u003Ci\u003EAuthentication\u003C\/i\u003E, \u003Ci\u003EShortcuts\u003C\/i\u003E, dan \u003Ci\u003ESocialite\u003C\/i\u003E. Penasaran? Yuk kita lihat masing-masing dari \u003Cb\u003Efitur terbaru dari Laravel 5\u003C\/b\u003E tersebut.\u003C\/div\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EAuth Controller\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ci\u003EAuthentication \u003C\/i\u003Emerupakan bagian yang krusial dari pengembangan aplikasi web pada umumnya. Butuh alokasi waktu untuk membuat sistem \u003Ci\u003Eauthentication \u003C\/i\u003Esendiri, namun hal tersebut tidak menjadi masalah lagi bagi Laravel 5. Pada Laravel 5 kita hanya butuh mengkonfigurasi database migration, models, controller, dan view agar sistem \u003Ci\u003Eauthentication \u003C\/i\u003Edapat berjalan dengan baik. Laravel 5 sudah memiliki Register service yang menjadi bagian krusial dari sistem \u003Ci\u003Eauthentication\u003C\/i\u003E.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELaravel 5 menyediakan command Artisan terbaru yang akan mengenerate \u003Ci\u003Eauthentication controller\u003C\/i\u003E dan \u003Ci\u003Epassword reminder controller\u003C\/i\u003E. Ini berarti kita terbantu untuk tidak membuat secara manual authentication controller yang menangani proses login, register, dan reset password. Berikut command nya.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre style=\"-webkit-font-smoothing: antialiased; background-color: #f0f0f3; border-radius: 5.33333px; border: 0px; box-sizing: border-box; color: #2a2b47; font-family: 'Droid Sans Mono', monospace; font-size: 14px; font-stretch: inherit; line-height: 1.5; margin-bottom: 12px; padding: 12px 16px; vertical-align: baseline; word-break: break-all; word-wrap: break-word;\"\u003E\u003Ccode style=\"background-color: transparent; border-radius: 0px; border: 0px; box-sizing: border-box; color: inherit; font-family: 'Droid Sans Mono', monospace; font-size: inherit; font-stretch: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; text-shadow: rgba(255, 255, 255, 0.498039) 0px 0.1em 0.1em; vertical-align: baseline; white-space: pre-wrap;\"\u003E$ php artisan make:auth\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003E \u003Cb\u003EShortcuts\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELaravel 5 juga hadir dengan fungsi shortcuts terbaru seperti untuk kebutuhan ketika memanggil View::make() atau Redirect::to(); Pada laravel 5 kita cukup memanggil redirect() untuk mengalihkan proses ke halaman tertentu. Pun demikian dengan View::make() kita cukup menggunakan view() saja untuk memanggil view pada controller.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003ESocialite\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EIni mungkin menjadi bagian terbaru dari Laravel dibanding versi sebelumnya. Laravel 5 hadir dengan package yang disebut dengan Socialite yang sudah terintegrasi dengan jejaring sosial seperti Facebook dan Twitter. Meskipun tidak include secara default, kita butuh memanggilnya melalui composer. Baca \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2015\/01\/mengenal-package-pada-laravel-dan.html\" target=\"_blank\"\u003Ecara memasang package pada Laravel\u003C\/a\u003E untuk membantu Anda menggunakan Socialite. Setelah selesai, kita tinggal mengkonfigurasi provider yang tersedia pada Socialite. Saat ini baru tersedia Twitter, GitHub, Google, dan Facebook. Socialite sangat bagus jika Anda ingin menerapkan fungsi login \/ regiter via social media seperti Facebook atau Twitter.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemikianlah penjelasan singkat beberapa fitur terbaru lainnya dari Laravel 5. Ikuti selalu update terbaru dari Laravel pada situsnya. Menurut hemat saya, Laravel semakin mengambil langkah kedepan yang memudahkan penggunanya dalam mengelola source code aplication dan membebaskan penggunanya dari mimpi buruk mengelola kodingan. Sampai jumpa di artikel lainnya tentang Laravel.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/328477672608484128\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/02\/fitur-terbaru-pada-laravel-5-part-3.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/328477672608484128"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/328477672608484128"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2015\/02\/fitur-terbaru-pada-laravel-5-part-3.html","title":"Fitur Terbaru Pada Laravel 5 - Part 3"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-WBzTMH4ILt4\/VO1j-P8gV-I\/AAAAAAAAF5w\/hjVSImfcps4\/s72-c\/terbaru%2Bdari%2Blaravel%2B5%2Bpart3.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-3800712498374717899"},"published":{"$t":"2014-10-12T14:08:00.000+07:00"},"updated":{"$t":"2015-01-06T16:40:44.970+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Facebook PHP SDK"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Integrasi Facebook Login pada Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s1600\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s1600\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg\" height=\"417\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada sesi kali ini saya akan berbagi tutorial tentang mengintegrasikan Facebook dengan laravel. Lebih tepatnya \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html\"\u003Eintegrasi Facebook login pada aplikasi Laravel\u003C\/a\u003E. Pada sesi kali ini kita akan memasang Facebook PHP SDK pada projek Laravel. Kemudian membuat aplikasi Facebook untuk digunakan sebagai media social-login aplikasi Laravel. Ketika seorang user login, kita akan mengambil data profile user tersebut dari Facebook dan menyimpannya pada database.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAda beberapa step yang akan kita lalui secara garis besar pada sesi kali ini.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EKonfigurasi Database\u003C\/li\u003E\u003Cli\u003EMembuat Facebook App\u003C\/li\u003E\u003Cli\u003EMemasang Facebook PHP SDK pada Laravel\u003C\/li\u003E\u003Cli\u003EMenggunakan Library Facebook pada Laravel\u003C\/li\u003E\u003C\/ol\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cb\u003EKonfigurasi Database\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada sesi \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html\"\u003Esebelumnya\u003C\/a\u003E kita sudah membuat tabel users yang menyimpan data seperti email, name, dan password. Tambahkan satu atribut lagi yaitu photo. Kita juga akan butuh satu tabel lagi yang menyimpan data profile user dari Facebook seperti username, user facebook id, dan access token lebih kurang seperti gambar berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-SIebfEIaud8\/VDoQ1lyn0mI\/AAAAAAAACD4\/_OyDft2H0DU\/s1600\/laravel-tabel-profile.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-SIebfEIaud8\/VDoQ1lyn0mI\/AAAAAAAACD4\/_OyDft2H0DU\/s1600\/laravel-tabel-profile.jpg\" height=\"155\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EJika Anda belum memiliki kedua tabel tersebut, Anda dapat membuatnya secara manual menggunakan fitur create table pada phpmyadmin xampp Anda. Anda juga bisa menggunakan fitur migrate pada Laravel. Langkahnya adalah sebagai berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EBuka cmd pada windows Anda, lalu CD ke folder Laravel.\u003C\/li\u003E\u003Cli\u003EJalankan perintah berikut:\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Ephp artisan migrate:make create_users_table\u003Cbr \/\u003Ephp artisan migrate:make create_profiles_table\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003ELaravel akan membuatkan dua file migration untuk Anda. Sekarang buka file migration \"create_users_table\" pada folder \"\u003Ci\u003Eapp\/database\/migrations\u003C\/i\u003E\".\u003C\/li\u003E\u003Cli\u003EHapus semua konten dan masukkan kode migrasi berikut lalu Save.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Euse IlluminateDatabaseMigrationsMigration;\u003Cbr \/\u003Eclass CreateUsersTable extends Migration {\u003Cbr \/\u003E    public function up()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::create('users', function($table)\u003Cbr \/\u003E        {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;string('email')-\u0026gt;unique();\u003Cbr \/\u003E            $table-\u0026gt;string('photo');\u003Cbr \/\u003E            $table-\u0026gt;string('name');\u003Cbr \/\u003E            $table-\u0026gt;string('password');\u003Cbr \/\u003E            $table-\u0026gt;timestamps();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E    public function down()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::drop('users');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EBuka file \"create_profiles_table\" pada folder yang sama, lalu hapus semua konten dan masukkan kode migrasi berikut lalu Save.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Euse IlluminateDatabaseMigrationsMigration;\u003Cbr \/\u003E\u003Cbr \/\u003Eclass CreateProfilesTable extends Migration {\u003Cbr \/\u003E    public function up()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::create('profiles', function($table)\u003Cbr \/\u003E        {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;integer('user_id')-\u0026gt;unsigned();\u003Cbr \/\u003E            $table-\u0026gt;string('username');\u003Cbr \/\u003E            $table-\u0026gt;biginteger('uid')-\u0026gt;unsigned();\u003Cbr \/\u003E            $table-\u0026gt;string('access_token');\u003Cbr \/\u003E            $table-\u0026gt;string('access_token_secret');\u003Cbr \/\u003E            $table-\u0026gt;timestamps();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E    public function down()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        Schema::drop('profiles');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EJalankan perintah \"php artisan migrate\" pada cmd. Laravel akan membuatkan dua tabel user pada database. Pastikan Anda sudah membuat database dan melakukan pengaturan koneksi database pada file app\/config\/database.php.\u003C\/li\u003E\u003Cli\u003EBuat model untuk tabel profiles. Buat file baru dengan nama Profile.php dan simpan pada folder \"app\/model\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Eclass Profile extends Eloquent {\u003Cbr \/\u003E    public function user()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        return $this-\u0026gt;belongsTo('User');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EPada file app\/model\/User.php juga tambahkan pengaturan relationship berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Epublic function profiles()\u003Cbr \/\u003E{\u003Cbr \/\u003E   return $this-\u0026gt;hasMany('Profile');\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cb\u003EMemasang Facebook PHP SDK\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESaya tidak akan membahas lebih dalam mengenai cara membuat Facebook App. Anda dapat mempelajarinya pada dokumentasi yang disediakan Facebook. Simpelnya silahkan buka\u0026nbsp;https:\/\/developers.facebook.com\/ dan klik menu Apps. Di sana ada pilihan \"Add new app\" untuk Anda membuat Facebook App.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESetelah Anda selesai membuat App tersebut, pastikan Anda mendapatkan App ID dan App Secret Key. Asumsikan Anda sudah memiliki keduanya, sekarang buat file facebook.php yang berisikan App ID dan Secret Key App Facebook Anda, dan simpan pada folder \"app\/config\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003E\/\/ app\/config\/facebook.php\u003Cbr \/\u003E\/\/ Facebook app Config \u003Cbr \/\u003Ereturn array(\u003Cbr \/\u003E    'appId' =\u0026gt; 'my-app-id',\u003Cbr \/\u003E    'secret' =\u0026gt; 'my-app-secret'\u003Cbr \/\u003E);\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003EBerikut langkah untuk memasang Facebook PHP SDK:\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EBuka kembali folder Laravel anda pada cmd.\u003C\/li\u003E\u003Cli\u003EJalankan commend berikut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003Ecomposer require facebook\/php-sdk\u003C\/pre\u003E\u003C\/li\u003E\u003Cli\u003EAnda akan ditanya oleh prompt tentang version yang akan dipasang. Ketik \u003Ci\u003Edev-master\u003C\/i\u003E\u0026nbsp;lalu tekan\u0026nbsp;\u003Ci\u003EEnter\u003C\/i\u003E.\u003C\/li\u003E\u003Cli\u003EBiarkan commend prompt menyelesaikan tugasnya.\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EFacebook SDK akan didownload dan entry pada package SDK akan terdaftar secara otomatis pada file composer.json. File SDK Facebook tersebut akan dapat Anda temukan pada folder vendor. Sekarang kita sudah dapat menggunakan Facebook SDK tersebut pada aplikasi Anda.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EMenggunakan Library Facebook pada Laravel\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESesi ini merupakan bagian terpenting untuk menerapkan Facebook Login dan tentu saja Register. Kita akan bermain pada file Route.php yang ada pada folder \u003Ci\u003Eapp\u003C\/i\u003E.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPertama kita akan membuat route 'login\/fb' yang akan berfungsi untuk mengarahkan user ke halaman authentikasi Facebook dimana user akan memberikan permission untuk mengirim data email, name, photo dan lainnya kembali ke aplikasi.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb', function() {\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $params = array(\u003Cbr \/\u003E        'redirect_uri' =\u0026gt; url(\u003Cb\u003E'\/login\/fb\/callback'\u003C\/b\u003E),\u003Cbr \/\u003E        'scope' =\u0026gt; 'email',\u003Cbr \/\u003E    );\u003Cbr \/\u003E    return Redirect::to($facebook-\u0026gt;getLoginUrl($params));\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EKe dua, kita butuh route \u003Cb\u003E'login\/fb\/callback'\u003C\/b\u003E untuk menerima akses token dari Facebook ketika proses pertama telah dilakukan. Facebook akan secara otomatis mengakses route tersebut karena pada route 'login\/fb' kita sudah mengatur redirect_url supaya menuju route ini.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb\/callback', function() {\u003Cbr \/\u003E    $code = Input::get('code');\u003Cbr \/\u003E    if (strlen($code) == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error communicating with Facebook');\u003Cbr \/\u003E\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $uid = $facebook-\u0026gt;getUser();\u003Cbr \/\u003E\u003Cbr \/\u003E    if ($uid == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error');\u003Cbr \/\u003E\u003Cbr \/\u003E    $me = $facebook-\u0026gt;api('\/me');\u003Cbr \/\u003E\u003Cbr \/\u003E    dd($me);\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESekarang ketika Anda mencoba untuk mengakses login\/fb, seharusnya Anda akan dapat melihat data-data Anda dari Facebook. Jika Anda berhasil pada tahap ini, kita tinggal membuat data tersebut dapat digunakan untuk disimpan pada database sebagai user dan profile.\u003Cbr \/\u003E\u003Cbr \/\u003ESederhananya proses yang akan dilalui adalah sebagai berikut saya kutip dari sumber.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/maxoffsky.com\/word\/wp-content\/uploads\/2013\/08\/Social-Logon.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/maxoffsky.com\/word\/wp-content\/uploads\/2013\/08\/Social-Logon.png\" height=\"480\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ETahap terakhir yang akan kita lakukan adalah menyimpan\/memperbaharui data user sesuai dengan logic di atas.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('login\/fb\/callback', function() {\u003Cbr \/\u003E    $code = Input::get('code');\u003Cbr \/\u003E    if (strlen($code) == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error communicating with Facebook');\u003Cbr \/\u003E\u003Cbr \/\u003E    $facebook = new Facebook(Config::get('facebook'));\u003Cbr \/\u003E    $uid = $facebook-\u0026gt;getUser();\u003Cbr \/\u003E\u003Cbr \/\u003E    if ($uid == 0) return Redirect::to('\/')-\u0026gt;with('message', 'There was an error');\u003Cbr \/\u003E\u003Cbr \/\u003E    $me = $facebook-\u0026gt;api('\/me');\u003Cbr \/\u003E\u003Cbr \/\u003E    $profile = Profile::whereUid($uid)-\u0026gt;first();\u003Cbr \/\u003E    if (empty($profile)) {\u003Cbr \/\u003E\u003Cbr \/\u003E        $user = new User;\u003Cbr \/\u003E        $user-\u0026gt;name = $me['first_name'].' '.$me['last_name'];\u003Cbr \/\u003E        $user-\u0026gt;email = $me['email'];\u003Cbr \/\u003E        $user-\u0026gt;photo = 'https:\/\/graph.facebook.com\/'.$me['username'].'\/picture?type=large';\u003Cbr \/\u003E        $user-\u0026gt;save();\u003Cbr \/\u003E\u003Cbr \/\u003E        $profile = new Profile();\u003Cbr \/\u003E        $profile-\u0026gt;uid = $uid;\u003Cbr \/\u003E        $profile-\u0026gt;username = $me['username'];\u003Cbr \/\u003E        $profile = $user-\u0026gt;profiles()-\u0026gt;save($profile);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    $profile-\u0026gt;access_token = $facebook-\u0026gt;getAccessToken();\u003Cbr \/\u003E    $profile-\u0026gt;save();\u003Cbr \/\u003E\u003Cbr \/\u003E    $user = $profile-\u0026gt;user;\u003Cbr \/\u003E\u003Cbr \/\u003E    Auth::login($user);\u003Cbr \/\u003E\u003Cbr \/\u003E    return Redirect::to('\/')-\u0026gt;with('message', 'Logged in with Facebook');\u003Cbr \/\u003E});\u003C\/pre\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ESekarang, cobalah untuk login, dan jika semua berjalan lancar, pada database Anda akan melihat data user Anda berhasil tersimpan. Juga pada halaman browser Anda akan error karena kita belum membuat route '\/'. Sekarang kita buat route '\/' dan 'logout'.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003ERoute::get('\/', function()\u003Cbr \/\u003E{\u003Cbr \/\u003E    $data = array();\u003Cbr \/\u003E\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        $data = Auth::user();\u003Cbr \/\u003E    }\u003Cbr \/\u003E    return View::make('user', array('data'=\u0026gt;$data));\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003Cbr \/\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    Auth::logout();\u003Cbr \/\u003E    return Redirect::to('\/');\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003EBiar tampilannya tidak terlalu jelek, kita buat view dengan nama file user.blade.php dan simpan pada folder \"app\/views\".\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"brush: php\" name=\"code\"\u003E@if(Session::has('message'))\u003Cbr \/\u003E    {{ Session::get('message')}}\u003Cbr \/\u003E@endif\u003Cbr \/\u003E\u0026lt;br\/\u0026gt;\u003Cbr \/\u003E@if (!empty($data))\u003Cbr \/\u003E    Hello, {{{ $data['name'] }}} \u003Cbr \/\u003E    \u003Cimg src=\"{{ $data['photo']}}\" \/\u003E\u003Cbr \/\u003E    Your email is {{ $data['email']}}\u003Cbr \/\u003E    \u003Cbr \/\u003E    \u0026lt;a href=\"\/logout\"\u0026gt;Logout\u0026lt;\/a\u0026gt;\u003Cbr \/\u003E@else\u003Cbr \/\u003E    Hi! Would you like to \u0026lt;a href=\"\/login\/fb\"\u0026gt;Login with Facebook\u0026lt;\/a\u0026gt; ?\u003Cbr \/\u003E@endif\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAkhirnya, ketika user ke halaman index dan belum login maka akan muncul perintah untuk memintanya Login with Facebook. Jika user tersebut login, sebuah data user baru akan disimpan pada database jika sebelumnya belum pernah login.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPerlu diingat bahwa uid user yang diterima dari Facebook akan berbeda untuk setiap App Facebook. Ada peluang dimana terjadi duplikat profile data ketika Anda mengganti App Facebook anda sementara data pada tabel profile masih ada.\u0026nbsp;\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemikianlah penjelasan singkat mengenai \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html\"\u003Eintegrasi Facebook PHP SDK pada Laravel\u003C\/a\u003E. Semoga bermanfaat bagi Anda.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESumber:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/maxoffsky.com\/code-blog\/integrating-facebook-login-into-laravel-application\/\"\u003EMaxoffsky\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/laravel.com\/\"\u003ELaravel\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EDemo:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"http:\/\/demo-fb-login.maxoffsky.com\/\" style=\"background-color: white; border: 0px; color: #00a9f2; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 23.7999992370605px; margin: 0px; padding: 0px; text-align: start; text-decoration: none; vertical-align: baseline;\" target=\"_blank\" title=\"Social sign in demo\"\u003Ehttp:\/\/demo-fb-login.maxoffsky.com\/\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESource on Github:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca href=\"https:\/\/github.com\/msurguy\/laravel-facebook-login\" style=\"background-color: white; border: 0px; color: #00a9f2; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 23.7999992370605px; margin: 0px; padding: 0px; text-align: start; text-decoration: none; vertical-align: baseline;\" target=\"_blank\" title=\"Social sign in demo\"\u003Ehttps:\/\/github.com\/msurguy\/laravel-facebook-login\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/3800712498374717899\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/3800712498374717899"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/3800712498374717899"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/integrasi-facebook-login-pada-laravel.html","title":"Integrasi Facebook Login pada Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-coZKQb2b8MQ\/VDoH-anEEGI\/AAAAAAAACDo\/Y7nCYo31u1Q\/s72-c\/integrasi%2Bfacebook%2Bpada%2Blaravel.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-2628113768804678171"},"published":{"$t":"2014-10-07T00:58:00.003+07:00"},"updated":{"$t":"2014-11-02T02:20:17.787+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"8 Alasan Laravel Lebih Baik daripada CodeIgniter"},"content":{"type":"html","$t":"\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s1600\/laravel-vs-codeigniter.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s1600\/laravel-vs-codeigniter.png\" height=\"376\" width=\"540\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESudah lama rasanya tidak update blog ini. Kali ini saya ingin berbagi tentang kenapa saya beralih meninggalkan CodeIgniter dan menggunakan Laravel. Saya menggunakan CodeIgniter sudah lebih dari dua tahun dan sudah banyak projek yang saya buat dengan menggunakan framework tersebut. Namun, tahun lalu, karena kebutuhan dari client mengharuskan kita untuk menggunakan Laravel, maka terpaksalah saya harus belajar framework tersebut.\u0026nbsp;\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBagi saya yang sudah mengerti CodeIgniter, ketika mencoba menggunakan Laravel butuh waktu satu minggu untuk membuat satu aplikasi yang memberi output berupa REST API. Itu pun saya butuh satu minggu sendiri untuk belajar Laravel. Tapi waktu yang saya investasikan untuk belajar Laravel tersebut sangat layak, apa lagi untuk hal-hal baru pada Laravel, dalam jangka panjang akan menghemat waktu saat proses development berjalan. Terang saja, untuk membuat aplikasi yang sama, hanya butuh waktu dua hari bagi saya ketika sudah mengerti Laravel.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPanduan kali ini tidak dimaksudkan untuk menjadi sebuah tutorial Laravel tetapi hanya berfungsi untuk memberikan suatu pandangan bagaimana beberapa kode Laravel terlihat dan bekerja. Saya telah melihat banyak blog memuji Laravel lebih dari CodeIgniter tapi belum benar-benar melihat ada yang merangkum kenapa itu lebih baik sebenarnya. Berikut 8 alasan - yang menurut saya tepat - kenapa Laravel lebih baik daripada CodeIgniter.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E1. Eloquent ORM\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ECara kita membuat model adalah berdasarkan relationship. Cara tersebut akan mengubah pola pikir kita tentang aplikasi dan gambaran aplikasi. Pada CodeIgniter saya menggunakan model dalam bentuk REST format yang secara dasar memiliki fungsi 'post','get','put','delete'. Pada Laravel, Eloquent ORM sudah menyiapkannya untuk kita. Kita cukup menetapkan relationship saja. Pada dasarnya kita akan membuatnya seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass Post extends Eloquent {\u003Cbr \/\u003E    protected $table = 'posts';\u003Cbr \/\u003E \u003Cbr \/\u003E    public function comments() {\u003Cbr \/\u003E        return $this-\u0026gt;hasMany('Comment');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003ELalu kita akan memanggil model tersebut dengan code berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EPost::find($id)-\u0026gt;comments()-\u0026gt;get();\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ELaravel juga memiliki satu fitur keamanan yang cukup fantastis yang memungkinkan kita untuk membuat field pada tabel terjaga dari berbagai ancaman yang dibuat atau terlupakan oleh developers. Secara default, Eloquent tidak mengizinkan untuk kita melakukan batch 'post' atau 'update' pada model. Kita harus melakukan sesuatu seperti code berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre\u003E$user = new User();\u003Cbr \/\u003E$user-\u0026gt;first_name = Input::get('first_name');\u003Cbr \/\u003E\/\/ dll\u003Cbr \/\u003E$user-\u0026gt;save();\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003ENamun, jika kita ingin model melakukan parsing variabel secara otomatis, bisa dengan cara:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass User extends Eloquent implements UserInterface, RemindableInterface {\u003Cbr \/\u003E \u003Cbr \/\u003E    protected $fillable = array('first_name', 'last_name', 'email');\u003Cbr \/\u003E}\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EKita cukup menjalankannya dengan code:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EUser::find($id)-\u0026gt;update(Input::all());\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ECanggih bukan? Bersih, aman dan elegan. Hal yang menarik bagi saya terhadap Laravel dari pada CodeIgniter adalah ketika kita membuat sebuah objek baru, ia akan mengembalikan objek tersebut dari pada mengembalikan 'id' saja seperti halnya CodeIgniter.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPenjelasan diatas hanya sedikit gambaran peran yang disediakan oleh Eloquent. Formatnya yang bersih membuat Laravel menyenangkan dan lebih mudah bagi saya untuk digunakan. Anda tentu saja dapat melakukan `joins` dan query yang lebih canggih tetapi semua mengikuti gaya sintaksis sederhana.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E2. Routing\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ERouting pada CodeIgniter mungkin sangat primitif sekali jika dibandingkan dengan Laravel. Pada CI, file Routing berguna ketika kita butuh redirection atau overwrites menggunakan '(:any)' dan '(:num)'. Hal tersebut sebenarnya bermanfaat tetapi butuh waktu yang banyak jika ingin membuat hal tersebut berjalan baik. Laravel memangkas itu semua. Bentuk dasar route pada Laravel adalah seperti code berikut dimana sekedar memanggil controller saja.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::controller('posts', 'PostController');\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita dapat menambahkan fungsi pada Route di Laravel. Bahkan kita bisa menggunakan file Route saja tanpa harus ada Controller untuk menangani sebuah request.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        Auth::logout();\u003Cbr \/\u003E        return Redirect::to(Config::get('app.url.www') . '\/');\u003Cbr \/\u003E    }\u003Cbr \/\u003E    else {\u003Cbr \/\u003E        return Response::view(\u003Cbr \/\u003E            'layouts.master',\u003Cbr \/\u003E            array('view' =\u0026gt; 'errors.404')\u003Cbr \/\u003E        , 404);\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita juga dapat menyaring URLs dengan regular expression dan mengarahkannya ke halaman 404 jika tidak valid.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::get('logout', function() {\u003Cbr \/\u003E    if (Auth::check()) {\u003Cbr \/\u003E        Auth::logout();\u003Cbr \/\u003E        return Redirect::to(Config::get('app.url.www') . '\/');\u003Cbr \/\u003E    }\u003Cbr \/\u003E    else {\u003Cbr \/\u003E        return Response::view(\u003Cbr \/\u003E            'layouts.master',\u003Cbr \/\u003E            array('view' =\u0026gt; 'errors.404')\u003Cbr \/\u003E        , 404);\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKelebihan dari Laravel lagi adalah kita dapat membuat filters secara terpisah dan memasangnya pada route lainnya. Ini sangat berguna ketika aplikasi kita butuh sistem authentication seperti admin.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::filter('auth', function() {\u003Cbr \/\u003E    if (Auth::guest()) {\u003Cbr \/\u003E        return Redirect::to('login')\u003Cbr \/\u003E                       -\u0026gt;with('error', 'You must be logged in.');\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E \u003Cbr \/\u003ERoute::when('profile', 'auth');\u003Cbr \/\u003ERoute::when('profile\/*', 'auth');\u003C\/pre\u003E\u003Cpre\u003E\u003C\/pre\u003E\u003Cbr \/\u003EPenjelasan di atas merupakan gambaran sederhana dari kegunaan route dan filter pada Laravel. Kita dapat melihat keseluruhan aplikasi kita dengan melakukan kontrol terhadap logic dan flow pada filters dan route tersebut.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003E3. REST\u003C\/b\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPada Codeigniter kita harus menentukan sendiri setiap function CRUD yang ada pada controller jika ingin membuat REST aplikasi. Ada juga yang menyediakan generator untuk mempermudah proses tersebut, akan tetapi function tersebut harus ditentukan route map nya sendiri. Laravel cukup menggunakan satu commend pada file 'route.php' untuk proses tersebut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::resource('posts', 'PostsController');\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ECode tersebut secara otomatis akan memetakan ketujuh function yang ada pada controller:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass PostsController extends \\BaseController {\u003Cbr \/\u003E \u003Cbr \/\u003E    public function index() {\u003Cbr \/\u003E        \/\/ Display a listing of the resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function create() {\u003Cbr \/\u003E        \/\/ Show the form for creating a new resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function store() {\u003Cbr \/\u003E        \/\/ (POST) Store a newly created resource in storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function show($id) {\u003Cbr \/\u003E        \/\/ (GET) Display the specified resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function edit($id) {\u003Cbr \/\u003E        \/\/ Show the form for editing the specified resource.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function update($id) {\u003Cbr \/\u003E        \/\/ (PUT) Update the specified resource in storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function destroy($id) {\u003Cbr \/\u003E        \/\/ (DELETE) Remove the specified resource from storage.\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita dapat menghapus function 'create' dan 'edit' jika tidak ingin ditampilkan pada interface. Kita juga dapat memasukkan controller tersebut pada folder 'controller\/api' untuk menjaga controller api terpisah. Pengaturan route map-nya akan seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003ERoute::resource('api\/posts}', 'api\\PostsController');\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003E4. Artisan\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EArsian merupakan script PHP pada Laravel yang dijalankan menggunakan commend line yang dapat digunakan untuk menggali informasi tentang aplikasi dan juga digunakan untuk membuat dan optimalisasi code. Ada banyak commend line yang dapat digunakan pada Laravel. Untuk melihatnya kita dapat menjalankan commend berikut pada cmd.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan list\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ESalah satu commend yang sangat membantu sekali adalah 'migrate' yaitu comment yang dapat anda gunakan untuk melakukan perubahan pada skema database. Kita juga dapat membuat commend kita sendiri. Pelajari lebih lanjut tentang \u003Ca href=\"https:\/\/laravel.com\/docs\/commands\"\u003Edevelop your own artisan command\u003C\/a\u003E. Fitur ini tidak akan anda temukan pada CodeIgniter.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E5. Migrations\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EPada CodeIgniter tidak ada cara yang gampang untuk mengsinkonkan skema database, update skema apalagi melakukan rollback pada skema sebelumnya. Sangat tidak mudah.\u003Cbr \/\u003E\u003Cbr \/\u003EPada Laravel kita dapat menjaga skema database kita sinkron antara pengembang dan server. Skema dapat sinkron hanya dengan menjalankan beberapa command Laravel pada command promt. Berikut command yang akan sering digunakan pada Laravel:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan migrate:make create_posts_table\u003Cbr \/\u003Ephp artisan migrate\u003Cbr \/\u003Ephp artisan migrate:rollback\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003ECommand pertama adalah untuk membuat file skema yang dapat kita modifikasi sesuai kebutuhan database. Command ke dua adalah untuk menjalankan skema baru atau perubahan yang ada pada file skema. Sedangakan command ke tiga adalah untuk mengembalikan skema database pada skema sebelumnya. Hal yang menarik adalah ketika command line pertama dijalankan, pada file migration terdapat dua fucntion 'up', dan 'down'. Function tersebut berfungsi untuk meng-update perubahan dan me-rollback perubahan.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Eclass CreatePostsTable extends Migration {\u003Cbr \/\u003E \u003Cbr \/\u003E    public function up() {\u003Cbr \/\u003E        Schema::create('posts', function($table) {\u003Cbr \/\u003E            $table-\u0026gt;increments('id');\u003Cbr \/\u003E            $table-\u0026gt;string('content', 1000);\u003Cbr \/\u003E            $table-\u0026gt;tinyInteger('status')-\u0026gt;unsigned()-\u0026gt;index();\u003Cbr \/\u003E            $table-\u0026gt;timestamp('created_at')-\u0026gt;index();\u003Cbr \/\u003E            $table-\u0026gt;timestamp('updated_at')-\u0026gt;index();\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E \u003Cbr \/\u003E    public function down() {\u003Cbr \/\u003E        Schema::dropIfExists('posts');\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EJuga ada function yang berperan untuk mengisi tabel pada skema dengan data. Cukup mirip dengan CodeIgniter dan sangat mudah dijalankan dengan command:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003Ephp artisan db:seed\u003C\/pre\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Cb\u003E6. Composer\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EComposer merupakan solusi untuk menambahkan dan mengelola packages pada aplikasi. Kita cukup menambahkan beberapa baris spesifikasi package, lakukan composer update, dan secara otomatis Laravel akan meng-install-nya. Jika ingin mendapatkan versi terbaru dari package tersebut, cukup lakukan hal yang sama. Tentu saja kita bisa menentukan sendiri kita akan menggunakan package versi berapa.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EJika kita coba buka file composer.json, kita dapat melihat ada area 'require' yang mana bisa kita isi dengan spesifikasi package. Contoh berikut saya menambahkan package user agent yang biasa saya gunakan pada Laravel.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E\"require\": {\u003Cbr \/\u003E    \"laravel\/framework\": \"4.0.*\",\u003Cbr \/\u003E    \"mews\/useragent\": \"dev-master\"\u003Cbr \/\u003E},\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003ELangkah berikutnya cukup tambahkan pada file config.php:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E'providers' =\u0026gt; array(\u003Cbr \/\u003E    'Mews\\Useragent\\UseragentServiceProvider',\u003Cbr \/\u003E    \/\/ etc...\u003Cbr \/\u003E),\u003Cbr \/\u003E \u003Cbr \/\u003E'aliases' =\u0026gt; array(\u003Cbr \/\u003E    'Agent' =\u0026gt; 'Mews\\Useragent\\Facades\\Useragent',\u003Cbr \/\u003E    \/\/ etc...\u003Cbr \/\u003E),\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003EKemampuan untuk menemukan package dengan mudah dan up to date, termasuk framework itu sendiri merupakan beban yang tak kan pernah lepas. Adanya composer memberi jalan untuk mempermudah hal tersebut.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E7. Authentication\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ESaya menyukai Laravel dengan adanya fungsi-fungsi untuk register\/login user. Ini sangat mempermudah kita dalam memulai pembuatan sebuah aplikasi. Di samping itu, juga terdapat banyak package yang tersedia untuk digunakan sebagai proses register dan login user.\u003Cbr \/\u003E\u003Cbr \/\u003EPada Laravel, kita dapat membuat kode hash untuk user baru.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EHash::make(Input::get('password'));\u003C\/pre\u003E\u003Cbr \/\u003EKita kemudian dapat melakukan proses autentikasi dengan menggunakan 'attempt' method.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::attempt(array('email' =\u0026gt; Input::get('email'), 'password' =\u0026gt; Input::get('password')));\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EJika method tersebut mengembalikan nilai true, dan user terdaftar pada session, secara otomatis user object akan terbentuk dan kita dapat mengaksesnya menggunakan:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::user();\u003Cbr \/\u003EAuth::user()-\u0026gt;id;\u003Cbr \/\u003E\/\/ etc...\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EKita juga dapat menambahkan atribut lainnya jika dibutuhkan;\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003EAuth::user()-\u0026gt;admin = true;\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EMethod tersebut berpedan dalam proses pembuatan user dan autentikasi sehingga membuat kita dapat fokus pada hal lainnya dari aplikasi. Hal semacam ini tidak akan ditemukan pada CI selain dari pada kita harus mencari sendiri package yang sesuai dan itu pun tanpa auto-update dan dikeloka secara otomatis oleh CI.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E8. Facade\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ELaravel merupakan object oriented framework dimana semua objeknya dapat diakses dengan facade design pattern. Inilah kenapa kode seperti\u0026nbsp;\u003Cspan style=\"background-color: white; color: #444444; font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 24px; text-align: start;\"\u003EUser::find(1);\u0026nbsp;\u003C\/span\u003E dapat diakses dan digunakan. Semua hal pada Laravel diperlakukan seperti kode tersebut. Misalkan kita memiliki model Users. Perhatikan kode berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003E\/\/ CodeIgniter\u003Cbr \/\u003E$this-\u0026gt;load-\u0026gt;model('users_model');\u003Cbr \/\u003E$this-\u0026gt;users_model-\u0026gt;get(1);\u003C\/pre\u003E\u003Cpre\u003E\/\/ Laravel\u003Cbr \/\u003EUser::find(1);\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003EUntuk mengakses model, dalam hal ini kita ingin mencari User dengan ID 1, Laravel melakukannya dengan sangat elegant. Pada CI kita harus melakukan pengaturan 'autoload' terlebih dahulu.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESumber:\u003C\/b\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/laravel.com\/\"\u003Elaravel.com\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/code.tutsplus.com\/courses\/whats-new-in-laravel-4\"\u003Ewhats new in Laravel 4\u003C\/a\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/bit.ly\/1vINYKD\"\u003Ehttp:\/\/websanova.com\u003C\/a\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/ayosb1m\"\u003E\u003Cimg src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" border=0 alt=\"BANNER FREE MEMBER\" width=\"450\" height=\"313\"\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/2628113768804678171\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/8-alasan-laravel-lebih-baik-daripada.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2628113768804678171"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2628113768804678171"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/10\/8-alasan-laravel-lebih-baik-daripada.html","title":"8 Alasan Laravel Lebih Baik daripada CodeIgniter"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-AcYzd0c8awo\/VDLWOQ9qEnI\/AAAAAAAACCI\/GuC1eCIXqEA\/s72-c\/laravel-vs-codeigniter.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-8860547701001405144"},"published":{"$t":"2014-04-22T11:39:00.000+07:00"},"updated":{"$t":"2014-11-03T02:34:59.631+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Simple CRUD Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s1600\/laravel+-+CRUD.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s1600\/laravel+-+CRUD.png\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESetelah dua minggu berlalu akhirnya bagian ini selesai juga saya tulis. Membuat tutorial ini sebenarnya tidak begitu sulit. Akan tetapi karena ada kesibukan dan hal lainnya pembuatan serial Laravel ini sedikit tertunda. Mohon maaf ya jika ada dari Anda yang lama menunggu.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cb\u003EPendahuluan\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EPada sesi ini kita akan menggunakan Laravel untuk membuat proses \u003Ci\u003Ecreate\u003C\/i\u003E, \u003Ci\u003Eread\u003C\/i\u003E, \u003Ci\u003Eupdate\u003C\/i\u003E, dan \u003Ci\u003Edelete\u003C\/i\u003E (CRUD) sederhana.CRUD merupakan proses standar yang biasa ditemukan pada sebuah sistem aplikasi web. Berikut adalah \u003Ci\u003Euser stories\u003C\/i\u003E dari fitur CRUD yang akan kita buat:\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EPengguna dapat melihat semua data user\u003C\/li\u003E\u003Cli\u003EPengguna dapat menambahkan data user dengan memasukkan data email, nama serta password.\u003C\/li\u003E\u003Cli\u003EPengguna data melihat informasi salah saru user secara mendetil.\u003C\/li\u003E\u003Cli\u003EPengguna dapat memperbaharui data user.\u003C\/li\u003E\u003Cli\u003EPengguna dapat menghapus user tertentu.\u003C\/li\u003E\u003C\/ol\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Ca name='more'\u003E\u003C\/a\u003ELebih kurang kita akan membuat sebuah aplikasi web sederhana seperti gambar berikut:\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-btdniWd0KE8\/U1UsI89oMRI\/AAAAAAAAA5c\/Nm2NL8ECu8E\/s1600\/Series3+-+list.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-btdniWd0KE8\/U1UsI89oMRI\/AAAAAAAAA5c\/Nm2NL8ECu8E\/s1600\/Series3+-+list.jpg\" height=\"201\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cb\u003EPembuatan Database\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBerdasarkan user stories di atas, langkah awal yang kita lakukan adalah membuat basisdata yang untuk menyimpan data user. Kita akan buat sebuah basisdata dengan nama dblaravel yang memiliki sebuah tabel Users. Informasi yang perlu kita simpan adalah nama, email, nomor hp, alamat dan password, serta informasi kapan dibuat dan kapan diperbaharui sebagai atribut standar yang wajib ada pada model Laravel. Langsung saja ke phpMyAdmin untuk membuat tabel tersebut.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-z6Zsq1fegBQ\/U1UuFcpv86I\/AAAAAAAAA5o\/9qIAdzd8-6U\/s1600\/Series3+-+db.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-z6Zsq1fegBQ\/U1UuFcpv86I\/AAAAAAAAA5o\/9qIAdzd8-6U\/s1600\/Series3+-+db.jpg\" height=\"179\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EPastikan Anda sudah mengatur configurasi database laravel pada file app\/config\/database.php bahwa kita menggunakan mysql sebagai database.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cpre\u003E'mysql' =\u0026gt; array(\u003Cbr \/\u003E 'driver'    =\u0026gt; 'mysql',\u003Cbr \/\u003E 'host'      =\u0026gt; 'localhost',\u003Cbr \/\u003E 'database'  =\u0026gt; 'dblaravel',\u003Cbr \/\u003E 'username'  =\u0026gt; 'root',\u003Cbr \/\u003E 'password'  =\u0026gt; '',\u003Cbr \/\u003E 'charset'   =\u0026gt; 'utf8',\u003Cbr \/\u003E 'collation' =\u0026gt; 'utf8_unicode_ci',\u003Cbr \/\u003E 'prefix'    =\u0026gt; '',\u003Cbr \/\u003E),\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003EModel\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003EKita akan mulai dengan model. Sederhananya sebuah model pada Laravel merupakan perawakilan dari sebuah tabel yang ada pada basisdata. Sebuah model merupakan sebuah objek yang sudah memiliki berbagai fungsi turunan dari Eloquent laravel. Untuk membuat sebuah model itu sangat mudah, kita cukup menulis beberapa baris kode saja seperti berikut:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-Uo8DMyZlLN0\/U1XgLNsDa9I\/AAAAAAAAA58\/Oj8CR3wpn-I\/s1600\/Series3-model1.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-Uo8DMyZlLN0\/U1XgLNsDa9I\/AAAAAAAAA58\/Oj8CR3wpn-I\/s1600\/Series3-model1.jpg\" height=\"161\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003EPada gambar di atas, kita membuat sebuah model untuk tabel proyek. Cukup dengan menuliskan nama tabel yang sesuai dengan model yang ingin kita buat. Lho? Bukannya kita membuat tabel user? Benar. Gambar di atas hanya sebuah demo untuk membuat sebuah model. Pada kasus sesi kali ini, karena tabel yang kita buat adalah tabel user, Laravel sudah menyediakan model User secara default. Kita tinggal mengganti nama tabel yang ada pada model User sesuai dengan tabel yang sudah kita buat.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-3FgsPh4osi4\/U1XgkQvjErI\/AAAAAAAAA6E\/hF0hIccXxag\/s1600\/Series3-model2.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-3FgsPh4osi4\/U1XgkQvjErI\/AAAAAAAAA6E\/hF0hIccXxag\/s1600\/Series3-model2.png\" height=\"420\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ECatatan:\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EJangan pusing dengan kode pada baris 3 dan 4 dari gambar di atas.\u003C\/li\u003E\u003Cli\u003EModel user menggunakan User Interface dan Remindable Interface untuk proses Authentication sehingga pada baris 3 dan 4 harus dideklarasikan seperti hal tersebut.\u003C\/li\u003E\u003Cli\u003EJangan pusing dengan istilah User Interface dan Remindable Interface.\u003C\/li\u003E\u003C\/ol\u003E\u003Cb\u003EController\u003C\/b\u003E\u003Cbr \/\u003EBagian ini merupakan inti nantinya dari apa yang akan kita buat. Kita akan menggunakan commend promt untuk membuat controller. Tinggal buka CMD anda dari sistem windows dan masuk ke folder tempat laravel berada lalu jalankan perintah seperti gambar berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-ldYwlvvWTXk\/U1XhnktVisI\/AAAAAAAAA6Q\/t8C901dMP4o\/s1600\/Series3-controller1.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-ldYwlvvWTXk\/U1XhnktVisI\/AAAAAAAAA6Q\/t8C901dMP4o\/s1600\/Series3-controller1.png\" height=\"84\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESekarang pada folder app\/controller sudah ada file UserController.php sebagai tanda pembuatan controller berhasil. Laravel akan memberikan kerangka fungsi CRUD pada setiap controller yang kita generate. Silahkan buka file tersebut, lebih kurang seperti berikut:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-BKdTGkdVNvE\/U1XiKzxxcfI\/AAAAAAAAA6Y\/rkrulA3Nqt4\/s1600\/Series3-controller2.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-BKdTGkdVNvE\/U1XiKzxxcfI\/AAAAAAAAA6Y\/rkrulA3Nqt4\/s1600\/Series3-controller2.png\" height=\"419\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003ERoute\u003C\/b\u003E\u003Cbr \/\u003EUntuk dapat mengakses fungsi yang ada pada controller, kita harus mendeklarasikan controller tersebut pada routes. Silahkan buka file App\/routes.php lalu tambahkan kode berikut\u003Cbr \/\u003E\u003Cpre\u003E\u003Ci\u003ERoute::resource('users','UserController');\u003C\/i\u003E\u003C\/pre\u003E\u003Cpre\u003E\u003Ci\u003E\u003Cbr \/\u003E\u003C\/i\u003E\u003C\/pre\u003ESekarang coba Anda menambahkan satu baris kode berikut controller user.\u003Cbr \/\u003E\u003Cpre\u003E\u003Ci\u003EPublic function index()\u003Cbr \/\u003E{\u003Cbr \/\u003E   return \"Hello CRUD!\";\u003Cbr \/\u003E}\u003C\/i\u003E\u003Cspan style=\"font-family: Times New Roman;\"\u003E\u003Cspan style=\"white-space: normal;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003ELalu buka http:\/\/localhost\/laravel\/public\/users dari browser Anda dan Anda akan melihat tulisan “Hello CRUD!”. Jika Anda berhasil sampai pada tahap tersebut, berarti Anda sudah siap untuk membuat sistem CRUD user.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAnda bisa melihat fungsi dan format url yang dapat diakses dari UserController dengan menggunakan perintah php artisan routes pada CMD anda. Informasi yang ada dalam garis bewarna hijau pada gambar di bawah merupakan url yang dapat Anda akses dari browser. Informasi yang ada pada kotak garis bewarna biru merupakan nama Route yang dapat Anda gunakan. Sementara itu, garis putus-putus bewarna orange menandakan controller yang diakses dan garis putus-putus bewarna kuning menandakan fungsi yang digunakan pada controller. Jadi, jika Anda membuka alamat \/users maka Route akan memanggil fungsi index pada controller users. Sederhananya begitu. Nanti kita akan bahas lebih jauh penggunaan Route ini.\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-l5qJpQzeAQQ\/U1XkPBah4-I\/AAAAAAAAA6k\/z2zQJrSdUD0\/s1600\/Series3-route.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-l5qJpQzeAQQ\/U1XkPBah4-I\/AAAAAAAAA6k\/z2zQJrSdUD0\/s1600\/Series3-route.png\" height=\"372\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESejauh ini Anda sudah mengetahui beberapa bagian dari Laravel seperti model, controller, dan route. Tutorial ini tidak selesai sampai di sini. Berhubung tutorialnya sangat panjang, dan saya harus mengerjakan sesuatu lainnya, saya akan sajikan pada Anda dalam bentuk ebook yang dapat Anda download dengan gratis \u003Ca href=\"http:\/\/bit.ly\/1lxnCW2\"\u003Edi sini\u003C\/a\u003E. You know, I have a lot to do this week. So, I think it's better if I just share you my ebook. if you need my source code, you can download it from github.\u003Cbr \/\u003E\u003Cbr \/\u003ESource: \u003Ca href=\"http:\/\/bit.ly\/1ibkBGY\"\u003EGitHub\u003C\/a\u003E\u0026nbsp;|\u0026nbsp;\u003Ca href=\"http:\/\/bit.ly\/1lxnCW2\"\u003EEbook\u003C\/a\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ETerimakasih sudah mampir. Semoga tutorialnya bermanfaat.\u003Cbr \/\u003ESalam Laravel!\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/1wnNnzF\"\u003E\u003Cimg alt=\"BANNER FREE MEMBER\" border=\"0\" src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" height=\"313\" width=\"450\" \/\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/8860547701001405144\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8860547701001405144"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/8860547701001405144"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/simple-crud-laravel-laravel-series.html","title":"Simple CRUD Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-VaadC8OL4JU\/U1UqMgKiMUI\/AAAAAAAAA5Q\/J8jco_0T6TY\/s72-c\/laravel+-+CRUD.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-5523576709194525275"},"published":{"$t":"2014-04-11T10:58:00.000+07:00"},"updated":{"$t":"2014-11-02T02:30:50.081+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Code"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"}],"title":{"type":"text","$t":"Cara Instalasi Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s1600\/instalasi+laravel.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s1600\/instalasi+laravel.jpg\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Ch2\u003E\u003Cspan style=\"font-family: inherit;\"\u003EHello Laravel!\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EMungkin ada yang bingung dengan cara instal Laravel. Pada bagian ini gw mau berbagi tentang bagaimana \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html\"\u003Ecara instal Laravel\u003C\/a\u003E dan beberapa masalah yang mungkin dihadapi saat instalasi. Berikut gw sajikan cara instal Laravel. Pastikan Anda familiar dengan Xampp karena pada tutorial kali ini gw make Xampp sebagai server localhost.\u003C\/span\u003E\u003Cbr \/\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Col\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EDonwload file Laravel. Anda bisa mengunduh file terbaru dari \u003Ca href=\"https:\/\/github.com\/laravel\/laravel\/archive\/master.zip\"\u003EGitHub\u003C\/a\u003E.\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EEkstrak file Laravel dan taruh di htdocs xampp atau pada direktori server yang Anda gunakan.\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka CMD lalu jalankan composer commend seperti berikut:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-8khlgylPVSY\/U0dlOUL7RvI\/AAAAAAAAA4M\/z351L21cvlE\/s1600\/Laravel+-+Instal+-+1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-8khlgylPVSY\/U0dlOUL7RvI\/AAAAAAAAA4M\/z351L21cvlE\/s1600\/Laravel+-+Instal+-+1.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka\u0026nbsp; \u003Ca href=\"http:\/\/localhost\/laravel\/public\"\u003Ehttp:\/\/localhost\/laravel\/public\u003C\/a\u003E di browser anda. jika instalasi berhasil maka akan tampil halaman seperti berikut.\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-_IhjcTJW-yE\/U0dlyjMnaJI\/AAAAAAAAA4U\/ayX9d_cJhQo\/s1600\/Laravel+-+Instal+-+1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-_IhjcTJW-yE\/U0dlyjMnaJI\/AAAAAAAAA4U\/ayX9d_cJhQo\/s1600\/Laravel+-+Instal+-+1.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EBuka file \u003Ci\u003Eroutes.php\u003C\/i\u003E yang ada dalam folder laravel\/apps\/ lalu ketik “Hello world!” seperti berikut.\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-6DmLwbKUQqw\/U0dmDcOIPXI\/AAAAAAAAA4c\/DrLTVfsa_dA\/s1600\/Laravel+-+Instal+-+3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-6DmLwbKUQqw\/U0dmDcOIPXI\/AAAAAAAAA4c\/DrLTVfsa_dA\/s1600\/Laravel+-+Instal+-+3.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EKembali ke browser Anda dan lakukan refresh. Selamat datang di dunia Laravel!\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-TBmWcuKUWCE\/U0dmPbctt7I\/AAAAAAAAA4k\/2NGsAlBW4eA\/s1600\/Laravel+-+Instal+-+4.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-TBmWcuKUWCE\/U0dmPbctt7I\/AAAAAAAAA4k\/2NGsAlBW4eA\/s1600\/Laravel+-+Instal+-+4.png\" width=\"550\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ELakukan \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/cara-menghilangkan-public-pada-laravel.html\"\u003Eseting URL agar \/public tidak muncul\u003C\/a\u003E pada url.\u0026nbsp;\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv class=\"MsoNormal\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EAnda sudah berhasil melakukan instalasi Laravel pada server Anda. Jika proses instalasi yang Anda lakukan tidak sesuai dengan tutorial ini, kemungkinan yang terjadi ada 2 hal:\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003ECommend promt (CMD) Anda tidak mengenal perintah “composer” saat menjalankan “composer install”. Solusinya Anda cukup menginstall \u003Ca href=\"http:\/\/getcomposer.org\/\"\u003Ecomposer\u003C\/a\u003E pada windows Anda.\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-size: 11pt; line-height: 115%;\"\u003E\u003Cspan style=\"font-family: inherit;\"\u003EVersi PHP Anda dibawah PHP 5.3. Silahkan cek pada \u003Ci\u003Ephpinfo\u003C\/i\u003E server Anda. Jika Anda menggunakan Xampp sebagai server localhost, anda dapat mengecek versi PHP yang Anda gunakan dengan mengklik menu \u003Ci\u003Ephpinfo()\u003C\/i\u003E pada halaman \u003Ca href=\"http:\/\/localhost\/xampp\"\u003Ehttp:\/\/localhost\/xampp\u003C\/a\u003E.\u003C\/span\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003EMungkin itu cara simpel instalasi Laravel. Lemme know if you have another trouble. Setelah ini gw bakal berbagi cara sederhana membuat sistem CRUD dengan laravel. Stay tune!\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"font-family: inherit;\"\u003E\u003Cspan style=\"font-size: 15px; line-height: 16.866666793823242px;\"\u003EThanks.\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"http:\/\/bit.ly\/ayosb1m\"\u003E\u003Cimg src=\"http:\/\/member.daftarsb1m.net\/file\/get\/path\/.banners.533a676dc42a6\/i\/1526\" border=0 alt=\"BANNER FREE MEMBER\" width=\"450\" height=\"313\"\u003E\u003C\/a\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/5523576709194525275\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5523576709194525275"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/5523576709194525275"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/proses-instalasi-laravel-laravel-series.html","title":"Cara Instalasi Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/4.bp.blogspot.com\/-JO_KHwJUcYs\/U0doJddZJVI\/AAAAAAAAA4s\/sacKPJ-9IWg\/s72-c\/instalasi+laravel.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7718071563039888147.post-2424309494621235428"},"published":{"$t":"2014-04-07T11:45:00.001+07:00"},"updated":{"$t":"2014-10-08T23:47:07.104+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Laravel Series"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Tips"}],"title":{"type":"text","$t":"Cara Menghilangkan \/public Pada Laravel - Laravel Series"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-yk5TdtVtL14\/U0Im2qzSWtI\/AAAAAAAAA3o\/1amBm8DGtj8\/s1600\/hello+laravel.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-yk5TdtVtL14\/U0Im2qzSWtI\/AAAAAAAAA3o\/1amBm8DGtj8\/s1600\/hello+laravel.png\" height=\"354\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EBagi pemula Laravel mungkin ada yang bertanya kenapa index dari aplikasi ada pada folder Public. Hal tersebut dapat dilihat ketika proses instalasi Laravel selesai dilakukan. Jika kamu punya file aplikasi dengan nama folder MyApps, ketiika dibuka dibrowser, http:\/\/localhost\/myapps\/, yang keluar malah isi folder, bukan halaman \"Hello World!\" dari Laravel. Akan tetapi jika url yang dibuka adalah http:\/\/myapps\/public\/, halaman \"Hello World!\" dari laravel akan muncul sperti gambar berikut:\u003C\/div\u003E\u003Ca name='more'\u003E\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-0eGeqnnwTP4\/U0ImIcwi0EI\/AAAAAAAAA3k\/REtyvXraOYs\/s1600\/laravel-1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-0eGeqnnwTP4\/U0ImIcwi0EI\/AAAAAAAAA3k\/REtyvXraOYs\/s1600\/laravel-1.png\" height=\"356\" width=\"600\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003EAda beberapa teman saya yang bertanya \u003Ca href=\"http:\/\/elfirasy.blogspot.com\/2014\/04\/cara-menghilangkan-public-pada-laravel.html\"\u003Ebagaimana caranya menghilangkan \/public\u003C\/a\u003E tersebut. Here we go.\u003C\/div\u003E\u003Cdiv style=\"text-align: justify;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Col\u003E\u003Cli\u003EPindahkan isi file yang ada pada folder public ke root.\u003C\/li\u003E\u003Cli\u003EHapus file yang menurut kamu gak perlu seperti read.me, dan .gitattribute.\u003C\/li\u003E\u003Cli\u003EBuka file index.php yang ada di root pada editor kamu.\u003C\/li\u003E\u003Cli\u003EH\u003Cspan style=\"font-family: Arial, Helvetica, sans-serif; font-size: x-small;\"\u003Eapus \u0026nbsp;kode \"\/..\/\" yang ada pada baris 21 dan 35 pada file index.\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003E\u003Cspan style=\"font-family: Arial, Helvetica, sans-serif; font-size: x-small;\"\u003EHapus folder public pada root.\u003C\/span\u003E\u003C\/li\u003E\u003Cli\u003EOke, sekarang buka url http:\/\/localhost\/myapps\/ dari browser kamu untuk melihat hasilnya :D\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003ESekarang apa pun Route yang kamu buat, url nya sudah tidak mengandung \/public lagi. \u0026nbsp;So, jangan sekali-kali panggil \/public karena itu tidak akan terbaca lagi oleh Route aplikasi kamu.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv style=\"text-align: justify;\"\u003EMungkin ada yang bertanya kenapa Laravel menaruh file index nya pada folder public. Bagi gw Laravel merupakan framework yang stay in role nya sebagai backend program. Laravel berperan pada server side dari sebuah aplikasi yang hanya mengeluarkan respon berupa xml atau json untuk nantinya diproses oleh frontend, bisa jQuery atau framework javascript lainnya seperti Ember, Angular, atau Backbone. Oleh karena itu laravel sangat bagus untuk membuat aplikasi yang memisahkan client side dengan server side. Ini juga sangat membantu ketika kamu membuat aplikasi mobile web dimana aplikasi anda hanya bisa diakses dari mobile sedangkan ketika aplikasi kamu diakses dari pc yang muncul adalah landing page. Padahal anda hanya punya satu folder aplikasi tapi dapat menampilkan dua proses yang berbeda. Kamu bisa menaruh file framework javascript yang memiliki file index.html pada root tanpa mengganggu index.php dan route laravel.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EThanks.\u003C\/div\u003E\u003Cdiv\u003ESemoga bermanfaat.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/elfirasy.blogspot.com\/feeds\/2424309494621235428\/comments\/default","title":"Poskan Komentar"},{"rel":"replies","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/cara-menghilangkan-public-pada-laravel.html#comment-form","title":"0 Komentar"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2424309494621235428"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7718071563039888147\/posts\/default\/2424309494621235428"},{"rel":"alternate","type":"text/html","href":"http:\/\/elfirasy.blogspot.com\/2014\/04\/cara-menghilangkan-public-pada-laravel.html","title":"Cara Menghilangkan \/public Pada Laravel - Laravel Series"}],"author":[{"name":{"$t":"Indra Elfirasy"},"uri":{"$t":"https:\/\/plus.google.com\/111167096195854423493"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-8JjA5jDAYos\/AAAAAAAAAAI\/AAAAAAAAC5Q\/quNUYu9Ok8A\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-yk5TdtVtL14\/U0Im2qzSWtI\/AAAAAAAAA3o\/1amBm8DGtj8\/s72-c\/hello+laravel.png","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});